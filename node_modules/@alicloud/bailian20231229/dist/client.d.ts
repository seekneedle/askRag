/**
 */
import * as $Util from '@alicloud/tea-util';
import OpenApi, * as $OpenApi from '@alicloud/openapi-client';
import * as $tea from '@alicloud/tea-typescript';
export declare class AddCategoryRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    categoryName?: string;
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * UNSTRUCTURED
     */
    categoryType?: string;
    /**
     * @example
     * cate_cdd11b1b79a74e8bbd675c356a91ee3XXXXXXXX
     */
    parentCategoryId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddCategoryResponseBody extends $tea.Model {
    /**
     * @example
     * success
     */
    code?: string;
    data?: AddCategoryResponseBodyData;
    /**
     * @example
     * Requests throttling triggered.
     */
    message?: string;
    /**
     * @remarks
     * Id of the request
     *
     * @example
     * 778C0B3B-03C1-5FC1-A947-36EDD13606AB
     */
    requestId?: string;
    /**
     * @example
     * 200
     */
    status?: string;
    /**
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddCategoryResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: AddCategoryResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddFileRequest extends $tea.Model {
    /**
     * @remarks
     * The primary key ID of the category to which the document is uploaded. This parameter corresponds to the `CategoryId` returned by the [AddCategory](https://help.aliyun.com/zh/model-studio/developer-reference/api-bailian-2023-12-29-addcategory) operation. You can also click the ID icon next to the category name on the Unstructured Data tab of the [Data Management](https://bailian.console.aliyun.com/#/data-center) page to view the ID. You can set the parameter to default, which specifies the Default Category created by the system.
     *
     * This parameter is required.
     *
     * @example
     * cate_cdd11b1b79a74e8bbd675c356a91ee3510024405
     */
    categoryId?: string;
    /**
     * @remarks
     * The lease ID, which corresponds to the `FileUploadLeaseId` parameter returned by the [ApplyFileUploadLease](https://help.aliyun.com/zh/model-studio/developer-reference/api-bailian-2023-12-29-applyfileuploadlease) operation.
     *
     * This parameter is required.
     *
     * @example
     * 68abd1dea7b6404d8f7d7b9f7fbd332d.1716698936847
     */
    leaseId?: string;
    /**
     * @remarks
     * The parser. Valid value:
     *
     * *   DASHSCOPE_DOCMIND: Intelligent document parsing by Alibaba Cloud.
     *
     * This parameter is required.
     *
     * @example
     * DASHSCOPE_DOCMIND
     */
    parser?: string;
    /**
     * @remarks
     * A list of tags associated with the document. The default value is null, which means no tags. You can specify up to 10 tags.
     */
    tags?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddFileShrinkRequest extends $tea.Model {
    /**
     * @remarks
     * The primary key ID of the category to which the document is uploaded. This parameter corresponds to the `CategoryId` returned by the [AddCategory](https://help.aliyun.com/zh/model-studio/developer-reference/api-bailian-2023-12-29-addcategory) operation. You can also click the ID icon next to the category name on the Unstructured Data tab of the [Data Management](https://bailian.console.aliyun.com/#/data-center) page to view the ID. You can set the parameter to default, which specifies the Default Category created by the system.
     *
     * This parameter is required.
     *
     * @example
     * cate_cdd11b1b79a74e8bbd675c356a91ee3510024405
     */
    categoryId?: string;
    /**
     * @remarks
     * The lease ID, which corresponds to the `FileUploadLeaseId` parameter returned by the [ApplyFileUploadLease](https://help.aliyun.com/zh/model-studio/developer-reference/api-bailian-2023-12-29-applyfileuploadlease) operation.
     *
     * This parameter is required.
     *
     * @example
     * 68abd1dea7b6404d8f7d7b9f7fbd332d.1716698936847
     */
    leaseId?: string;
    /**
     * @remarks
     * The parser. Valid value:
     *
     * *   DASHSCOPE_DOCMIND: Intelligent document parsing by Alibaba Cloud.
     *
     * This parameter is required.
     *
     * @example
     * DASHSCOPE_DOCMIND
     */
    parser?: string;
    /**
     * @remarks
     * A list of tags associated with the document. The default value is null, which means no tags. You can specify up to 10 tags.
     */
    tagsShrink?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddFileResponseBody extends $tea.Model {
    /**
     * @remarks
     * The status code.
     *
     * @example
     * DataCenter.FileTooLarge
     */
    code?: string;
    /**
     * @remarks
     * The returned data fields.
     */
    data?: AddFileResponseBodyData;
    /**
     * @remarks
     * The error message.
     *
     * @example
     * User not authorized to operate on the specified resource.
     */
    message?: string;
    /**
     * @remarks
     * The request ID.
     *
     * @example
     * 778C0B3B-xxxx-5FC1-A947-36EDD13606AB
     */
    requestId?: string;
    /**
     * @remarks
     * The HTTP status code.
     *
     * @example
     * 200
     */
    status?: string;
    /**
     * @remarks
     * Indications whether the call is successful. Valid values:
     *
     * *   true
     * *   false
     *
     * @example
     * true
     */
    success?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddFileResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: AddFileResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ApplyFileUploadLeaseRequest extends $tea.Model {
    /**
     * @remarks
     * The name of the uploaded document, including the extension. Supported formats: pdf, doc, docx, md, txt, ppt, and pptx. The document name must be 4 to 128 characters in length.
     *
     * This parameter is required.
     */
    fileName?: string;
    /**
     * @remarks
     * The MD5 value of the uploaded document. This parameter is verified by the server (not in the current version).
     *
     * This parameter is required.
     *
     * @example
     * 19657c391f6c70bcea63c154d8606bb3
     */
    md5?: string;
    /**
     * @remarks
     * The size of the uploaded document, in bytes. This parameter is verified by the server (not in the current version). Valid values: 1 to 100000000.
     *
     * This parameter is required.
     *
     * @example
     * 1000
     */
    sizeInBytes?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ApplyFileUploadLeaseResponseBody extends $tea.Model {
    /**
     * @remarks
     * The status code.
     *
     * @example
     * DataCenter.FileTooLarge
     */
    code?: string;
    /**
     * @remarks
     * The returned data fields.
     */
    data?: ApplyFileUploadLeaseResponseBodyData;
    /**
     * @remarks
     * The error message.
     *
     * @example
     * User not authorized to operate on the specified resource
     */
    message?: string;
    /**
     * @remarks
     * The request ID.
     *
     * @example
     * 778C0B3B-xxxx-5FC1-A947-36EDD13606AB
     */
    requestId?: string;
    /**
     * @remarks
     * The HTTP status code.
     *
     * @example
     * 200
     */
    status?: string;
    /**
     * @remarks
     * Indications whether the call is successful. Valid values:
     *
     * *   true
     * *   false
     *
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ApplyFileUploadLeaseResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: ApplyFileUploadLeaseResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAndPulishAgentRequest extends $tea.Model {
    applicationConfig?: CreateAndPulishAgentRequestApplicationConfig;
    instructions?: string;
    modelId?: string;
    name?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAndPulishAgentShrinkRequest extends $tea.Model {
    applicationConfigShrink?: string;
    instructions?: string;
    modelId?: string;
    name?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAndPulishAgentResponseBody extends $tea.Model {
    code?: string;
    data?: string;
    httpStatusCode?: number;
    message?: string;
    requestId?: string;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAndPulishAgentResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreateAndPulishAgentResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateIndexRequest extends $tea.Model {
    /**
     * @remarks
     * The list of primary key IDs of the categories to be imported into the knowledge base.
     */
    categoryIds?: string[];
    /**
     * @remarks
     * The estimated length of chunks. The maximum number of characters for a chunk. Texts exceeding this limit are splited. For more information, see [Create a knowledge base](https://www.alibabacloud.com/help/en/model-studio/user-guide/rag-knowledge-base). Valid values: [1-2048].
     *
     * The default value is empty, which means using the intelligent splitting method.
     *
     * >  If you specify the `ChunkSize` parameter, you must also specify the `OverlapSize` and `Separator` parameters. If you do not specify these three parameters, the system uses the intelligent splitting method by default.
     *
     * @example
     * 128
     */
    chunkSize?: number;
    columns?: CreateIndexRequestColumns[];
    /**
     * @remarks
     * >  This parameter is not available. Do not specify this parameter.
     */
    dataSource?: CreateIndexRequestDataSource;
    /**
     * @remarks
     * The description of the knowledge base. The description must be 0 to 1,000 characters in length. This parameter is empty by default.
     */
    description?: string;
    /**
     * @remarks
     * The list of primary key IDs of the documents to be imported into the knowledge base.
     */
    documentIds?: string[];
    /**
     * @remarks
     * The name of the embedding model. The embedding model converts the original input prompt and knowledge text into numerical vectors for similarity comparison. The default and only model available is DashScope text-embedding-v2. It supports multiple languages including Chinese and English and normalizes the vector results. For more information, see [Create a knowledge base](https://www.alibabacloud.com/help/en/model-studio/user-guide/rag-knowledge-base). Valid value:
     *
     * *   text-embedding-v2
     *
     * The default value is null, which means using the text-embedding-v2 model.
     *
     * @example
     * text-embedding-v2
     */
    embeddingModelName?: string;
    /**
     * @remarks
     * The name of the knowledge base. The name must be 1 to 20 characters in length and can contain characters classified as letter in Unicode, including English letters, Chinese characters, digits, among others. The name can also contain colons (:), underscores (_), periods (.), and hyphens (-).
     *
     * This parameter is required.
     */
    name?: string;
    /**
     * @remarks
     * The overlap length. The number of overlapping characters between two consecutive chunks. For more information, see [Create a knowledge base](https://www.alibabacloud.com/help/en/model-studio/user-guide/rag-knowledge-base). Valid values: 0 to 1024.
     *
     * The default value is empty, which means using the intelligent splitting method.
     *
     * @example
     * 16
     */
    overlapSize?: number;
    /**
     * @remarks
     * Similarity Threshold. The lowest similarity score of chunks that can be returned. This parameter is used to filter text chunks returned by the rank model. For more information, see [Create a knowledge base](https://www.alibabacloud.com/help/en/model-studio/user-guide/rag-knowledge-base). Valid values: [0.01-1.00].
     *
     * Default value: 0.20.
     *
     * @example
     * 0.20
     */
    rerankMinScore?: number;
    /**
     * @remarks
     * The name of the rank model. The rank model is a scoring system outside the knowledge base. It calculates the similarity score of each text chunk in the input question and knowledge base and ranks them in descending order. Then, the model returns the top K chunks with the highest scores. For more information, see [Create a knowledge base](https://www.alibabacloud.com/help/en/model-studio/user-guide/rag-knowledge-base). Valid values:
     *
     * *   gte-rerank-hybrid
     * *   gte-rerank
     *
     * The default value is empty, which means using the official gte-rerank-hybrid model.
     *
     * >  If you need only semantic ranking, we recommend that you use gte-rerank. If you need both semantic ranking and text matching features to ensure relevance, we recommend that you use gte-rerank-hybrid.
     *
     * @example
     * gte-rerank-hybrid
     */
    rerankModelName?: string;
    /**
     * @remarks
     * The clause identifier. The document is split into chunks based on this identifier. For more information, see [Create a knowledge base](https://www.alibabacloud.com/help/en/model-studio/user-guide/rag-knowledge-base). You can specify multiple identifiers and do not need to add any other characters to separate them. For example: !,\\\\\\n. Valid values:
     *
     * *   \\n: line break
     * *   ，: Chinese comma
     * *   ,: English comma
     * *   。 : Chinese full stop
     * *   .: English full stop
     * *   ！ : Chinese exclamation point
     * *   ! : English exclamation point
     * *   ；: Chinese semicolon
     * *   ;: English semicolon
     * *   ？: Chinese question mark
     * *   ?: English question mark
     *
     * The default value is empty, which means using the intelligent splitting method.
     *
     * @example
     * ,
     */
    separator?: string;
    /**
     * @remarks
     * The ID of the vector storage instance. This parameter is available only when SinkType is set to ADB. You can view the ID on the [Instances](https://gpdbnext.console.aliyun.com/gpdb/list) page of AnalyticDB for PostgreSQL.
     *
     * @example
     * gp-bp321093j84
     */
    sinkInstanceId?: string;
    /**
     * @remarks
     * The region of the vector storage instance. This parameter is available only when SinkType is set to ADB. You can call the [DescribeRegions](https://www.alibabacloud.com/help/en/analyticdb/analyticdb-for-postgresql/developer-reference/api-gpdb-2016-05-03-describeregions) operation to query the most recent region list.
     *
     * @example
     * cn-hangzhou
     */
    sinkRegion?: string;
    /**
     * @remarks
     * The vector storage type of the knowledge base. For more information, see [Create a knowledge base](https://www.alibabacloud.com/help/en/model-studio/user-guide/rag-knowledge-base). Valid values:
     *
     * *   DEFAULT: The built-in vector database.
     * *   ADB: AnalyticDB for PostgreSQL database. If you need advanced features, such as managing, auditing, and monitoring, we recommend that you specify ADB.
     *
     * >  If you have not used AnalyticDB for AnalyticDB in Model Studio before, go to the [Create Knowledge Base](https://bailian.console.aliyun.com/#/knowledge-base/create) page, select ADB-PG as Vector Storage Type, and follow the instructions to grant permissions. If you specify ADB, you must also specify the `SinkInstanceId` and `SinkRegion` parameters.
     *
     * This parameter is required.
     *
     * @example
     * DEFAULT
     */
    sinkType?: string;
    /**
     * @remarks
     * The data type of [Data Management](https://bailian.console.aliyun.com/#/data-center). For more information, see [Create a knowledge base](https://www.alibabacloud.com/help/en/model-studio/user-guide/rag-knowledge-base). Valid values:
     *
     * *   DATA_CENTER_CATEGORY: The category type. Import all documents from one or more categories in Data Center.
     * *   DATA_CENTER_FILE: The document type. Import one or more documents from Data Center.
     *
     * >  If this parameter is set to DATA_CENTER_CATEGORY, you must specify the `CategoryIds` parameter. If this parameter is set to DATA_CENTER_FILE, you must specify the `DocumentIds` parameter.
     *
     * >  If you want to create an empty knowledge base, you can use an empty category. Set this parameter to DATA_CENTER_CATEGORY. And specify the ID of an empty category for the `CategoryIds` parameter.
     *
     * This parameter is required.
     *
     * @example
     * DATA_CENTER_FILE
     *
     * **if can be null:**
     * false
     */
    sourceType?: string;
    /**
     * @remarks
     * The data type of the knowledge base. For more information, see [Create a knowledge base](https://www.alibabacloud.com/help/en/model-studio/user-guide/rag-knowledge-base). Valid value:
     *
     * *   unstructured
     *
     * >  After a knowledge base is created, its data type cannot be changed. You cannot create a structured knowledge base by calling an API operation. Use the console instead.
     *
     * This parameter is required.
     *
     * @example
     * structured
     */
    structureType?: string;
    metaExtractColumns?: CreateIndexRequestMetaExtractColumns[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateIndexShrinkRequest extends $tea.Model {
    /**
     * @remarks
     * The list of primary key IDs of the categories to be imported into the knowledge base.
     */
    categoryIdsShrink?: string;
    /**
     * @remarks
     * The estimated length of chunks. The maximum number of characters for a chunk. Texts exceeding this limit are splited. For more information, see [Create a knowledge base](https://www.alibabacloud.com/help/en/model-studio/user-guide/rag-knowledge-base). Valid values: [1-2048].
     *
     * The default value is empty, which means using the intelligent splitting method.
     *
     * >  If you specify the `ChunkSize` parameter, you must also specify the `OverlapSize` and `Separator` parameters. If you do not specify these three parameters, the system uses the intelligent splitting method by default.
     *
     * @example
     * 128
     */
    chunkSize?: number;
    columnsShrink?: string;
    /**
     * @remarks
     * >  This parameter is not available. Do not specify this parameter.
     */
    dataSourceShrink?: string;
    /**
     * @remarks
     * The description of the knowledge base. The description must be 0 to 1,000 characters in length. This parameter is empty by default.
     */
    description?: string;
    /**
     * @remarks
     * The list of primary key IDs of the documents to be imported into the knowledge base.
     */
    documentIdsShrink?: string;
    /**
     * @remarks
     * The name of the embedding model. The embedding model converts the original input prompt and knowledge text into numerical vectors for similarity comparison. The default and only model available is DashScope text-embedding-v2. It supports multiple languages including Chinese and English and normalizes the vector results. For more information, see [Create a knowledge base](https://www.alibabacloud.com/help/en/model-studio/user-guide/rag-knowledge-base). Valid value:
     *
     * *   text-embedding-v2
     *
     * The default value is null, which means using the text-embedding-v2 model.
     *
     * @example
     * text-embedding-v2
     */
    embeddingModelName?: string;
    /**
     * @remarks
     * The name of the knowledge base. The name must be 1 to 20 characters in length and can contain characters classified as letter in Unicode, including English letters, Chinese characters, digits, among others. The name can also contain colons (:), underscores (_), periods (.), and hyphens (-).
     *
     * This parameter is required.
     */
    name?: string;
    /**
     * @remarks
     * The overlap length. The number of overlapping characters between two consecutive chunks. For more information, see [Create a knowledge base](https://www.alibabacloud.com/help/en/model-studio/user-guide/rag-knowledge-base). Valid values: 0 to 1024.
     *
     * The default value is empty, which means using the intelligent splitting method.
     *
     * @example
     * 16
     */
    overlapSize?: number;
    /**
     * @remarks
     * Similarity Threshold. The lowest similarity score of chunks that can be returned. This parameter is used to filter text chunks returned by the rank model. For more information, see [Create a knowledge base](https://www.alibabacloud.com/help/en/model-studio/user-guide/rag-knowledge-base). Valid values: [0.01-1.00].
     *
     * Default value: 0.20.
     *
     * @example
     * 0.20
     */
    rerankMinScore?: number;
    /**
     * @remarks
     * The name of the rank model. The rank model is a scoring system outside the knowledge base. It calculates the similarity score of each text chunk in the input question and knowledge base and ranks them in descending order. Then, the model returns the top K chunks with the highest scores. For more information, see [Create a knowledge base](https://www.alibabacloud.com/help/en/model-studio/user-guide/rag-knowledge-base). Valid values:
     *
     * *   gte-rerank-hybrid
     * *   gte-rerank
     *
     * The default value is empty, which means using the official gte-rerank-hybrid model.
     *
     * >  If you need only semantic ranking, we recommend that you use gte-rerank. If you need both semantic ranking and text matching features to ensure relevance, we recommend that you use gte-rerank-hybrid.
     *
     * @example
     * gte-rerank-hybrid
     */
    rerankModelName?: string;
    /**
     * @remarks
     * The clause identifier. The document is split into chunks based on this identifier. For more information, see [Create a knowledge base](https://www.alibabacloud.com/help/en/model-studio/user-guide/rag-knowledge-base). You can specify multiple identifiers and do not need to add any other characters to separate them. For example: !,\\\\\\n. Valid values:
     *
     * *   \\n: line break
     * *   ，: Chinese comma
     * *   ,: English comma
     * *   。 : Chinese full stop
     * *   .: English full stop
     * *   ！ : Chinese exclamation point
     * *   ! : English exclamation point
     * *   ；: Chinese semicolon
     * *   ;: English semicolon
     * *   ？: Chinese question mark
     * *   ?: English question mark
     *
     * The default value is empty, which means using the intelligent splitting method.
     *
     * @example
     * ,
     */
    separator?: string;
    /**
     * @remarks
     * The ID of the vector storage instance. This parameter is available only when SinkType is set to ADB. You can view the ID on the [Instances](https://gpdbnext.console.aliyun.com/gpdb/list) page of AnalyticDB for PostgreSQL.
     *
     * @example
     * gp-bp321093j84
     */
    sinkInstanceId?: string;
    /**
     * @remarks
     * The region of the vector storage instance. This parameter is available only when SinkType is set to ADB. You can call the [DescribeRegions](https://www.alibabacloud.com/help/en/analyticdb/analyticdb-for-postgresql/developer-reference/api-gpdb-2016-05-03-describeregions) operation to query the most recent region list.
     *
     * @example
     * cn-hangzhou
     */
    sinkRegion?: string;
    /**
     * @remarks
     * The vector storage type of the knowledge base. For more information, see [Create a knowledge base](https://www.alibabacloud.com/help/en/model-studio/user-guide/rag-knowledge-base). Valid values:
     *
     * *   DEFAULT: The built-in vector database.
     * *   ADB: AnalyticDB for PostgreSQL database. If you need advanced features, such as managing, auditing, and monitoring, we recommend that you specify ADB.
     *
     * >  If you have not used AnalyticDB for AnalyticDB in Model Studio before, go to the [Create Knowledge Base](https://bailian.console.aliyun.com/#/knowledge-base/create) page, select ADB-PG as Vector Storage Type, and follow the instructions to grant permissions. If you specify ADB, you must also specify the `SinkInstanceId` and `SinkRegion` parameters.
     *
     * This parameter is required.
     *
     * @example
     * DEFAULT
     */
    sinkType?: string;
    /**
     * @remarks
     * The data type of [Data Management](https://bailian.console.aliyun.com/#/data-center). For more information, see [Create a knowledge base](https://www.alibabacloud.com/help/en/model-studio/user-guide/rag-knowledge-base). Valid values:
     *
     * *   DATA_CENTER_CATEGORY: The category type. Import all documents from one or more categories in Data Center.
     * *   DATA_CENTER_FILE: The document type. Import one or more documents from Data Center.
     *
     * >  If this parameter is set to DATA_CENTER_CATEGORY, you must specify the `CategoryIds` parameter. If this parameter is set to DATA_CENTER_FILE, you must specify the `DocumentIds` parameter.
     *
     * >  If you want to create an empty knowledge base, you can use an empty category. Set this parameter to DATA_CENTER_CATEGORY. And specify the ID of an empty category for the `CategoryIds` parameter.
     *
     * This parameter is required.
     *
     * @example
     * DATA_CENTER_FILE
     *
     * **if can be null:**
     * false
     */
    sourceType?: string;
    /**
     * @remarks
     * The data type of the knowledge base. For more information, see [Create a knowledge base](https://www.alibabacloud.com/help/en/model-studio/user-guide/rag-knowledge-base). Valid value:
     *
     * *   unstructured
     *
     * >  After a knowledge base is created, its data type cannot be changed. You cannot create a structured knowledge base by calling an API operation. Use the console instead.
     *
     * This parameter is required.
     *
     * @example
     * structured
     */
    structureType?: string;
    metaExtractColumnsShrink?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateIndexResponseBody extends $tea.Model {
    /**
     * @remarks
     * HTTP status code
     *
     * @example
     * Forbidden
     */
    code?: string;
    /**
     * @remarks
     * The returned data.
     */
    data?: CreateIndexResponseBodyData;
    /**
     * @remarks
     * The error message.
     *
     * @example
     * Invalid input, variable name is missing
     */
    message?: string;
    /**
     * @remarks
     * The request ID.
     *
     * @example
     * 17204B98-7734-4F9A-8464-2446A84821CA
     */
    requestId?: string;
    /**
     * @remarks
     * The status code.
     *
     * @example
     * 200
     */
    status?: string;
    /**
     * @remarks
     * Indications whether the API call is successful. Valid values:
     *
     * *   true
     * *   false
     *
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateIndexResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreateIndexResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateMemoryRequest extends $tea.Model {
    description?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateMemoryResponseBody extends $tea.Model {
    /**
     * @example
     * 6bff4f317a14442fbc9f73d29dbd5fc3
     */
    memoryId?: string;
    /**
     * @example
     * 6a71f2d9-f1c9-913b-818b-114029103cad
     */
    requestId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateMemoryResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreateMemoryResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateMemoryNodeRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    content?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateMemoryNodeResponseBody extends $tea.Model {
    /**
     * @example
     * 68de06c95368463a8be4a84efc872cc5
     */
    memoryNodeId?: string;
    /**
     * @example
     * 8C56C7AF-6573-19CE-B018-E05E1EDCF4C5
     */
    requestId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateMemoryNodeResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreateMemoryNodeResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreatePromptTemplateRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    content?: string;
    /**
     * @remarks
     * This parameter is required.
     */
    name?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreatePromptTemplateResponseBody extends $tea.Model {
    /**
     * @example
     * 6e49109bfeb94a39bb268f4e483ccxxx
     */
    promptTemplateId?: string;
    /**
     * @example
     * FE9B6CBF-47E6-5D76-9C5D-B814DD5ABxxx
     */
    requestId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreatePromptTemplateResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: CreatePromptTemplateResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteAgentResponseBody extends $tea.Model {
    code?: string;
    data?: string;
    httpStatusCode?: number;
    message?: string;
    requestId?: string;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteAgentResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: DeleteAgentResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteCategoryResponseBody extends $tea.Model {
    /**
     * @example
     * success
     */
    code?: string;
    /**
     * @remarks
     * data
     */
    data?: DeleteCategoryResponseBodyData;
    /**
     * @example
     * workspace id is null or invalid.
     */
    message?: string;
    /**
     * @remarks
     * Id of the request
     *
     * @example
     * 17204B98-xxxx-4F9A-8464-2446A84821CA
     */
    requestId?: string;
    /**
     * @example
     * 200
     */
    status?: string;
    /**
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteCategoryResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: DeleteCategoryResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteFileResponseBody extends $tea.Model {
    /**
     * @example
     * InvalidParameter
     */
    code?: string;
    data?: DeleteFileResponseBodyData;
    /**
     * @example
     * Current file status does not support delete.
     */
    message?: string;
    /**
     * @remarks
     * Id of the request
     *
     * @example
     * 17204B98-xxxx-4F9A-8464-2446A84821CA
     */
    requestId?: string;
    /**
     * @example
     * 200
     */
    status?: string;
    /**
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteFileResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: DeleteFileResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteIndexRequest extends $tea.Model {
    /**
     * @remarks
     * The primary key ID of the knowledge base, which is the `Data.Id` parameter returned by the [CreateIndex](https://www.alibabacloud.com/help/en/model-studio/developer-reference/api-bailian-2023-12-29-createindex) operation.
     *
     * This parameter is required.
     *
     * @example
     * f89ie0fj5a
     */
    indexId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteIndexResponseBody extends $tea.Model {
    /**
     * @remarks
     * HTTP status code
     *
     * @example
     * Index.InvalidParameter
     */
    code?: string;
    /**
     * @remarks
     * The error message.
     *
     * @example
     * Required parameter(%s) missing or invalid, please check the request parameters.
     */
    message?: string;
    /**
     * @remarks
     * The request ID.
     *
     * @example
     * 17204B98-xxxx-4F9A-8464-2446A84821CA
     */
    requestId?: string;
    /**
     * @remarks
     * The status code.
     *
     * @example
     * 200
     */
    status?: string;
    /**
     * @remarks
     * Indications whether the API call is successful. Valid values:
     *
     * *   true
     * *   false
     *
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteIndexResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: DeleteIndexResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteIndexDocumentRequest extends $tea.Model {
    /**
     * @remarks
     * The list of the primary key IDs of the documents.
     *
     * This parameter is required.
     */
    documentIds?: string[];
    /**
     * @remarks
     * The primary key ID of the knowledge base, which is the `Data.Id` parameter returned by the [CreateIndex](https://www.alibabacloud.com/help/en/model-studio/developer-reference/api-bailian-2023-12-29-createindex) operation.
     *
     * This parameter is required.
     *
     * @example
     * 79c0aly8zw
     */
    indexId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteIndexDocumentShrinkRequest extends $tea.Model {
    /**
     * @remarks
     * The list of the primary key IDs of the documents.
     *
     * This parameter is required.
     */
    documentIdsShrink?: string;
    /**
     * @remarks
     * The primary key ID of the knowledge base, which is the `Data.Id` parameter returned by the [CreateIndex](https://www.alibabacloud.com/help/en/model-studio/developer-reference/api-bailian-2023-12-29-createindex) operation.
     *
     * This parameter is required.
     *
     * @example
     * 79c0aly8zw
     */
    indexId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteIndexDocumentResponseBody extends $tea.Model {
    /**
     * @remarks
     * HTTP status code
     *
     * @example
     * Index.InvalidParameter
     */
    code?: string;
    /**
     * @remarks
     * The parameters returned by the operation.
     */
    data?: DeleteIndexDocumentResponseBodyData;
    /**
     * @remarks
     * The error message.
     *
     * @example
     * Required parameter(%s) missing or invalid, please check the request parameters.
     */
    message?: string;
    /**
     * @remarks
     * The request ID.
     *
     * @example
     * 17204B98-xxxx-4F9A-8464-2446A84821CA
     */
    requestId?: string;
    /**
     * @remarks
     * The status code.
     *
     * @example
     * 200
     */
    status?: string;
    /**
     * @remarks
     * Indications whether the API call is successful. Valid values:
     *
     * *   true
     * *   false
     *
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteIndexDocumentResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: DeleteIndexDocumentResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteMemoryResponseBody extends $tea.Model {
    /**
     * @example
     * 6a71f2d9-f1c9-913b-818b-114029103cad
     */
    requestId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteMemoryResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: DeleteMemoryResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteMemoryNodeResponseBody extends $tea.Model {
    /**
     * @example
     * 8C56C7AF-6573-19CE-B018-E05E1EDCF4C5
     */
    requestId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteMemoryNodeResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: DeleteMemoryNodeResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeletePromptTemplateResponseBody extends $tea.Model {
    /**
     * @example
     * FE9B6CBF-47E6-5D76-9C5D-B814DD5ABxxx
     */
    requestId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeletePromptTemplateResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: DeletePromptTemplateResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeFileResponseBody extends $tea.Model {
    /**
     * @remarks
     * The status code.
     *
     * @example
     * Success
     */
    code?: string;
    /**
     * @remarks
     * The returned data fields.
     */
    data?: DescribeFileResponseBodyData;
    /**
     * @remarks
     * The error message.
     *
     * @example
     * Requests throttling triggered.
     */
    message?: string;
    /**
     * @remarks
     * The request ID.
     *
     * @example
     * 17204B98-xxxx-4F9A-8464-2446A84821CA
     */
    requestId?: string;
    /**
     * @remarks
     * The HTTP status code.
     *
     * @example
     * 200
     */
    status?: string;
    /**
     * @remarks
     * Indications whether the API call is successful. Valid values:
     *
     * *   true
     * *   false
     *
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeFileResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: DescribeFileResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetIndexJobStatusRequest extends $tea.Model {
    /**
     * @remarks
     * The primary key ID of the knowledge base, which is the `Data.Id` parameter returned by the [CreateIndex](https://www.alibabacloud.com/help/en/model-studio/developer-reference/api-bailian-2023-12-29-createindex) operation.
     *
     * This parameter is required.
     *
     * @example
     * 79c0aly8zw
     */
    indexId?: string;
    /**
     * @remarks
     * The knowledge base job ID, which is the `Data.Id` parameter returned by the [SubmitIndexJob](https://www.alibabacloud.com/help/en/model-studio/developer-reference/api-bailian-2023-12-29-submitindexjob) or [SubmitIndexAddDocumentsJob](https://www.alibabacloud.com/help/en/model-studio/developer-reference/api-bailian-2023-12-29-submitindexadddocumentsjob) operations.
     *
     * This parameter is required.
     *
     * @example
     * 20230718xxxx-146c93bf
     */
    jobId?: string;
    /**
     * @remarks
     * Both the [SubmitIndexJob](https://www.alibabacloud.com/help/en/model-studio/developer-reference/api-bailian-2023-12-29-submitindexjob) and [SubmitIndexAddDocumentsJob](https://www.alibabacloud.com/help/en/model-studio/developer-reference/api-bailian-2023-12-29-submitindexadddocumentsjob) operations support batch import of documents. This operation returns both the overall `Status` of the job and the `Document.Status` of each document. If there are a large number of documents, you can use the `PageNumber` parameter to perform a paged query. Pages start from page 1. Default value: 1.
     *
     * @example
     * 1
     */
    pageNumber?: number;
    /**
     * @remarks
     * The number of document import jobs that are displayed on each page. No maximum value. Default value: 10.
     *
     * @example
     * 10
     */
    pageSize?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetIndexJobStatusResponseBody extends $tea.Model {
    /**
     * @remarks
     * HTTP status code
     *
     * @example
     * Index.Forbidden
     */
    code?: string;
    /**
     * @remarks
     * The returned data.
     */
    data?: GetIndexJobStatusResponseBodyData;
    /**
     * @remarks
     * The error message.
     *
     * @example
     * User not authorized to operate on the specified resource.
     */
    message?: string;
    /**
     * @remarks
     * The request ID.
     *
     * @example
     * 17204B98-xxxx-4F9A-8464-2446A84821CA
     */
    requestId?: string;
    /**
     * @remarks
     * The HTTP status code returned.
     *
     * @example
     * 200
     */
    status?: string;
    /**
     * @remarks
     * Indications whether the API call is successful. Valid values:
     *
     * *   true
     * *   false
     *
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetIndexJobStatusResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetIndexJobStatusResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetMemoryResponseBody extends $tea.Model {
    description?: string;
    /**
     * @example
     * 6bff4f317a14442fbc9f73d29dbd5fc3
     */
    memoryId?: string;
    /**
     * @example
     * 6a71f2d9-f1c9-913b-818b-114029103cad
     */
    requestId?: string;
    /**
     * @example
     * llm-us9hjmt32nysdm5v
     */
    workspaceId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetMemoryResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetMemoryResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetMemoryNodeResponseBody extends $tea.Model {
    content?: string;
    /**
     * @example
     * 6bff4f317a14442fbc9f73d29dbd5fc3
     */
    memoryId?: string;
    /**
     * @example
     * 68de06c95368463a8be4a84efc872cc5
     */
    memoryNodeId?: string;
    /**
     * @example
     * 8C56C7AF-6573-19CE-B018-E05E1EDCF4C5
     */
    requestId?: string;
    /**
     * @example
     * llm-us9hjmt32nysdm5v
     */
    workspaceId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetMemoryNodeResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetMemoryNodeResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetPromptTemplateResponseBody extends $tea.Model {
    content?: string;
    name?: string;
    /**
     * @example
     * 6e49109bfeb94a39bb268f4e483ccxxx
     */
    promptTemplateId?: string;
    /**
     * @example
     * 8C56C7AF-6573-19CE-B018-E05E1EDCF4C5
     */
    requestId?: string;
    /**
     * @example
     * ["theme"]
     */
    variables?: string[];
    /**
     * @example
     * llm-us9hjmt32nysdxxx
     */
    workspaceId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetPromptTemplateResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetPromptTemplateResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetPublishedAgentResponseBody extends $tea.Model {
    code?: string;
    data?: GetPublishedAgentResponseBodyData;
    httpStatusCode?: number;
    message?: string;
    requestId?: string;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetPublishedAgentResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: GetPublishedAgentResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListCategoryRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * UNSTRUCTURED
     */
    categoryType?: string;
    /**
     * @example
     * 20
     */
    maxResults?: number;
    /**
     * @example
     * AAAAAdH70eOCSCKtacdomNzak4U=
     */
    nextToken?: string;
    /**
     * @example
     * cate_cdd11b1b79a74e8bbd675c356a91ee3XXXXXXXX
     */
    parentCategoryId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListCategoryResponseBody extends $tea.Model {
    /**
     * @example
     * success
     */
    code?: string;
    data?: ListCategoryResponseBodyData;
    /**
     * @example
     * workspace id is null or invalid.
     */
    message?: string;
    /**
     * @remarks
     * Id of the request
     *
     * @example
     * 17204B98-xxxx-4F9A-8464-2446A84821CA
     */
    requestId?: string;
    /**
     * @example
     * 200
     */
    status?: string;
    /**
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListCategoryResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: ListCategoryResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListChunksRequest extends $tea.Model {
    /**
     * @remarks
     * An array of field names. This parameter is used to filter non-private fields (prefixed with_underscores) in the Metadata parameter returned by this operation. By default, this parameter is left empty, which means all non-private fields in the Metadata parameter are returned. If you only want specified non-private fields, such as title, set this parameter to title.
     */
    fields?: string[];
    /**
     * @remarks
     * The primary key ID of the document. This parameter is not required for structured knowledge base, but is required for unstructured knowledge base. To view the ID, you can click the ID icon next to the file name on the [Data Management](https://bailian.console.aliyun.com/#/data-center) page. You can filter returned chunks by the document ID. This parameter is left empty by default.
     *
     * @example
     * file_5f03dfea56da4050ab68d61871fc4cb3_10151493
     */
    filed?: string;
    /**
     * @remarks
     * The primary key ID of the knowledge base, which is the `Data.Id` parameter returned by the [CreateIndex](https://www.alibabacloud.com/help/en/model-studio/developer-reference/api-bailian-2023-12-29-createindex) operation.
     *
     * This parameter is required.
     *
     * @example
     * otoru9en4v
     */
    indexId?: string;
    /**
     * @remarks
     * The number of the pages to return. Pages start from page 1. Default value: 1.
     *
     * @example
     * 1
     */
    pageNum?: number;
    /**
     * @remarks
     * The number of chunks to display on each page. Maximum value: 100. Default value: 10.
     *
     * @example
     * 10
     */
    pageSize?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListChunksResponseBody extends $tea.Model {
    /**
     * @remarks
     * The error code.
     *
     * @example
     * Index.InvalidParameter
     */
    code?: string;
    /**
     * @remarks
     * The data returned.
     */
    data?: ListChunksResponseBodyData;
    /**
     * @remarks
     * The error message.
     *
     * @example
     * Required parameter(%s) missing or invalid, please check the request parameters.
     */
    message?: string;
    /**
     * @remarks
     * The request ID.
     *
     * @example
     * 8F97A63B-55F1-527F-9D6E-467B6A7E8CF1
     */
    requestId?: string;
    /**
     * @remarks
     * The HTTP status code returned.
     *
     * @example
     * 200
     */
    status?: string;
    /**
     * @remarks
     * Indications whether the API call is successful. Valid values:
     *
     * *   true
     * *   false
     *
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListChunksResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: ListChunksResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListFileRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     *
     * @example
     * cate_cdd11b1b79a74e8bbd675c356a91ee3510024405
     */
    categoryId?: string;
    fileName?: string;
    /**
     * @example
     * 20
     */
    maxResults?: number;
    /**
     * @example
     * AAAAAdH70eOCSCKtacdomNzak4U=
     */
    nextToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListFileResponseBody extends $tea.Model {
    /**
     * @example
     * success
     */
    code?: string;
    data?: ListFileResponseBodyData;
    /**
     * @example
     * Requests throttling triggered.
     */
    message?: string;
    /**
     * @remarks
     * Id of the request
     *
     * @example
     * 8F97A63B-55F1-527F-9D6E-467B6A7E8CF1
     */
    requestId?: string;
    /**
     * @example
     * 200
     */
    status?: string;
    /**
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListFileResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: ListFileResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListIndexDocumentsRequest extends $tea.Model {
    /**
     * @remarks
     * The names of the queried documents. The default value is null, which means the names are not used to filter the results.
     */
    documentName?: string;
    /**
     * @remarks
     * The import status of the documents to be queried. Valid values:
     *
     * *   INSERT_ERROR
     * *   RUNNING
     * *   DELETED
     * *   FINISH
     *
     * The default value is null, which means the import status is not used to filter the results.
     *
     * @example
     * FINISH
     */
    documentStatus?: string;
    /**
     * @remarks
     * The primary key ID of the knowledge base, which is the `Data.Id` parameter returned by the [CreateIndex](https://www.alibabacloud.com/help/en/model-studio/developer-reference/api-bailian-2023-12-29-createindex) operation.
     *
     * This parameter is required.
     *
     * @example
     * 79c0aly8zw
     */
    indexId?: string;
    /**
     * @remarks
     * The page numbers of the pages to return. Pages start from page 1. Default value: 1.
     *
     * @example
     * 1
     */
    pageNumber?: number;
    /**
     * @remarks
     * The number of documents displayed on each page. No maximum value. Default value: 10.
     *
     * @example
     * 10
     */
    pageSize?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListIndexDocumentsResponseBody extends $tea.Model {
    /**
     * @remarks
     * HTTP status code
     *
     * @example
     * InvalidParameter
     */
    code?: string;
    /**
     * @remarks
     * The returned data.
     */
    data?: ListIndexDocumentsResponseBodyData;
    /**
     * @remarks
     * The error message.
     *
     * @example
     * Required parameter(%s) missing or invalid, please check the request parameters.
     */
    message?: string;
    /**
     * @remarks
     * The request ID.
     *
     * @example
     * 35A267BF-xxxx-54DB-8394-AA3B0742D833
     */
    requestId?: string;
    /**
     * @remarks
     * The status code.
     *
     * @example
     * 200
     */
    status?: string;
    /**
     * @remarks
     * Indications whether the API call is successful. Valid values:
     *
     * *   true
     * *   false
     *
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListIndexDocumentsResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: ListIndexDocumentsResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListIndicesRequest extends $tea.Model {
    /**
     * @remarks
     * The name of the knowledge base. You can query knowledge base by name. The name must be 1 to 20 characters in length and can contain characters classified as letter in Unicode, including English letters, Chinese characters, digits, among others. The name can also contain colons (:), underscores (_), periods (.), and hyphens (-).
     *
     * This parameter is left empty by default, which means that all knowledge bases in the specified workspace are queried.
     *
     * @example
     * idx_status_score
     */
    indexName?: string;
    /**
     * @remarks
     * The number of the pages to return. Pages start from page 1. Default value: 1.
     *
     * @example
     * 1
     */
    pageNumber?: string;
    /**
     * @remarks
     * The number of knowledge bases to display on each page. No maximum value. Default value: 10.
     *
     * @example
     * 10
     */
    pageSize?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListIndicesResponseBody extends $tea.Model {
    /**
     * @remarks
     * HTTP status code
     *
     * @example
     * Index.InvalidParameter
     */
    code?: string;
    /**
     * @remarks
     * The returned data.
     */
    data?: ListIndicesResponseBodyData;
    /**
     * @remarks
     * The error message.
     *
     * @example
     * Required parameter(%s) missing or invalid, please check the request parameters.
     */
    message?: string;
    /**
     * @remarks
     * The request ID.
     *
     * @example
     * 17204B98-xxxx-4F9A-8464-2446A84821CA
     */
    requestId?: string;
    /**
     * @remarks
     * The HTTP status code returned.
     *
     * @example
     * 200
     */
    status?: string;
    /**
     * @remarks
     * Indications whether the API call is successful. Valid values:
     *
     * *   true
     * *   false
     *
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListIndicesResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: ListIndicesResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListMemoriesRequest extends $tea.Model {
    /**
     * @example
     * 10
     */
    maxResults?: number;
    /**
     * @example
     * dc270401186b433f975d7e1faaa34e0e
     */
    nextToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListMemoriesResponseBody extends $tea.Model {
    /**
     * @example
     * 10
     */
    maxResults?: number;
    memories?: ListMemoriesResponseBodyMemories[];
    /**
     * @example
     * dc270401186b433f975d7e1faaa34e0e
     */
    nextToken?: string;
    /**
     * @example
     * 6a71f2d9-f1c9-913b-818b-114029103cad
     */
    requestId?: string;
    /**
     * @example
     * 105
     */
    totalCount?: number;
    /**
     * @example
     * llm-us9hjmt32nysdm5v
     */
    workspaceId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListMemoriesResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: ListMemoriesResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListMemoryNodesRequest extends $tea.Model {
    /**
     * @example
     * 20
     */
    maxResults?: number;
    /**
     * @example
     * dc270401186b433f975d7e1faaa34e0e
     */
    nextToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListMemoryNodesResponseBody extends $tea.Model {
    /**
     * @example
     * 20
     */
    maxResults?: number;
    memoryNodes?: ListMemoryNodesResponseBodyMemoryNodes[];
    /**
     * @example
     * dc270401186b433f975d7e1faaa34e0e
     */
    nextToken?: string;
    /**
     * @example
     * 6a71f2d9-f1c9-913b-818b-114029103cad
     */
    requestId?: string;
    /**
     * @example
     * 100
     */
    totalCount?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListMemoryNodesResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: ListMemoryNodesResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListPromptTemplatesRequest extends $tea.Model {
    /**
     * @example
     * 10
     */
    maxResults?: number;
    name?: string;
    /**
     * @example
     * dc270401186b433f975d7e1faaa34e0e
     */
    nextToken?: string;
    /**
     * @example
     * System
     */
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListPromptTemplatesResponseBody extends $tea.Model {
    /**
     * @example
     * 10
     */
    maxResults?: number;
    /**
     * @example
     * dc270401186b433f975d7e1faaa34e0e
     */
    nextToken?: string;
    promptTemplates?: ListPromptTemplatesResponseBodyPromptTemplates[];
    /**
     * @example
     * FE9B6CBF-47E6-5D76-9C5D-B814DD5AB071
     */
    requestId?: string;
    /**
     * @example
     * 15
     */
    totalCount?: number;
    /**
     * @example
     * llm-us9hjmt32nysdxxx
     */
    workspaceId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListPromptTemplatesResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: ListPromptTemplatesResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListPublishedAgentRequest extends $tea.Model {
    pageNo?: number;
    pageSize?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListPublishedAgentResponseBody extends $tea.Model {
    code?: string;
    data?: ListPublishedAgentResponseBodyData;
    httpStatusCode?: number;
    message?: string;
    requestId?: string;
    success?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListPublishedAgentResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: ListPublishedAgentResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RetrieveRequest extends $tea.Model {
    /**
     * @remarks
     * Vector retrieval top K. After generating vectors based on input text, the top K chunks in the knowledge base that are most similar to the vector representation of the input text are retrieved. Valid values: 0 to 100. The sum of the `DenseSimilarityTopK` and `SparseSimilarityTopK` parameters must be less than or equal to 200.
     *
     * Default value: 100.
     *
     * @example
     * 100
     */
    denseSimilarityTopK?: number;
    /**
     * @remarks
     * Specifies whether to enable reranking. For more information, see [Create a knowledge base](https://www.alibabacloud.com/help/en/model-studio/user-guide/rag-knowledge-base). Valid values:
     *
     * *   true
     * *   false
     *
     * Default value: true.
     *
     * @example
     * true
     */
    enableReranking?: boolean;
    /**
     * @remarks
     * Specifies whether to enable multi-round conversation rewriting. For more information, see [Create a knowledge base](https://www.alibabacloud.com/help/en/model-studio/user-guide/rag-knowledge-base). Valid values:
     *
     * *   true
     * *   false
     *
     * Default value: false.
     *
     * @example
     * false
     */
    enableRewrite?: boolean;
    images?: string[];
    /**
     * @remarks
     * The primary key ID of the knowledge base, which is the `Data.Id` parameter returned by the [CreateIndex](https://www.alibabacloud.com/help/en/model-studio/developer-reference/api-bailian-2023-12-29-createindex) operation.
     *
     * This parameter is required.
     *
     * @example
     * 5pwe0m2g6t
     */
    indexId?: string;
    /**
     * @remarks
     * The input query prompt. The length and characters of the query are not limited.
     */
    query?: string;
    /**
     * @remarks
     * Ranking configurations.
     */
    rerank?: RetrieveRequestRerank[];
    /**
     * @remarks
     * Similarity Threshold The lowest similarity score of chunks that can be returned. This parameter is used to filter text chunks returned by the rank model. For more information, see [Create a knowledge base](https://www.alibabacloud.com/help/en/model-studio/user-guide/rag-knowledge-base). Valid values: [0.01-1.00]. The priority of this parameter is greater than the similarity threshold configured for the knowledge base.
     *
     * By default, this parameter is left empty. In this case, the similarity threshold of the knowledge base is used.
     *
     * @example
     * 0.20
     */
    rerankMinScore?: number;
    /**
     * @remarks
     * The top N return data after reranking. Valid values: 1 to 20. Default value: 5.
     *
     * @example
     * 5
     */
    rerankTopN?: number;
    /**
     * @remarks
     * Conversation rewriting configurations.
     */
    rewrite?: RetrieveRequestRewrite[];
    /**
     * @remarks
     * Specifies whether to save the retrieve test history. Valid values:
     *
     * *   true
     * *   false
     *
     * Default value: false.
     *
     * @example
     * false
     */
    saveRetrieverHistory?: boolean;
    /**
     * @remarks
     * Specifies complex filter conditions. For more information about the syntax of SearchFilters, see the SearchFilter syntax section of this topic.
     */
    searchFilters?: {
        [key: string]: string;
    }[];
    /**
     * @remarks
     * The top K of keyword retrieval. Chunks that exactly match the keywords of the input text are retrieved from the knowledge base. This filters out irrelevant chunks and boosts accuracy. Valid values: 0 to 100. The sum of the `DenseSimilarityTopK` and `SparseSimilarityTopK` parameters must be less than or equal to 200.
     *
     * Default value: 100.
     *
     * @example
     * 100
     */
    sparseSimilarityTopK?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RetrieveShrinkRequest extends $tea.Model {
    /**
     * @remarks
     * Vector retrieval top K. After generating vectors based on input text, the top K chunks in the knowledge base that are most similar to the vector representation of the input text are retrieved. Valid values: 0 to 100. The sum of the `DenseSimilarityTopK` and `SparseSimilarityTopK` parameters must be less than or equal to 200.
     *
     * Default value: 100.
     *
     * @example
     * 100
     */
    denseSimilarityTopK?: number;
    /**
     * @remarks
     * Specifies whether to enable reranking. For more information, see [Create a knowledge base](https://www.alibabacloud.com/help/en/model-studio/user-guide/rag-knowledge-base). Valid values:
     *
     * *   true
     * *   false
     *
     * Default value: true.
     *
     * @example
     * true
     */
    enableReranking?: boolean;
    /**
     * @remarks
     * Specifies whether to enable multi-round conversation rewriting. For more information, see [Create a knowledge base](https://www.alibabacloud.com/help/en/model-studio/user-guide/rag-knowledge-base). Valid values:
     *
     * *   true
     * *   false
     *
     * Default value: false.
     *
     * @example
     * false
     */
    enableRewrite?: boolean;
    imagesShrink?: string;
    /**
     * @remarks
     * The primary key ID of the knowledge base, which is the `Data.Id` parameter returned by the [CreateIndex](https://www.alibabacloud.com/help/en/model-studio/developer-reference/api-bailian-2023-12-29-createindex) operation.
     *
     * This parameter is required.
     *
     * @example
     * 5pwe0m2g6t
     */
    indexId?: string;
    /**
     * @remarks
     * The input query prompt. The length and characters of the query are not limited.
     */
    query?: string;
    /**
     * @remarks
     * Ranking configurations.
     */
    rerankShrink?: string;
    /**
     * @remarks
     * Similarity Threshold The lowest similarity score of chunks that can be returned. This parameter is used to filter text chunks returned by the rank model. For more information, see [Create a knowledge base](https://www.alibabacloud.com/help/en/model-studio/user-guide/rag-knowledge-base). Valid values: [0.01-1.00]. The priority of this parameter is greater than the similarity threshold configured for the knowledge base.
     *
     * By default, this parameter is left empty. In this case, the similarity threshold of the knowledge base is used.
     *
     * @example
     * 0.20
     */
    rerankMinScore?: number;
    /**
     * @remarks
     * The top N return data after reranking. Valid values: 1 to 20. Default value: 5.
     *
     * @example
     * 5
     */
    rerankTopN?: number;
    /**
     * @remarks
     * Conversation rewriting configurations.
     */
    rewriteShrink?: string;
    /**
     * @remarks
     * Specifies whether to save the retrieve test history. Valid values:
     *
     * *   true
     * *   false
     *
     * Default value: false.
     *
     * @example
     * false
     */
    saveRetrieverHistory?: boolean;
    /**
     * @remarks
     * Specifies complex filter conditions. For more information about the syntax of SearchFilters, see the SearchFilter syntax section of this topic.
     */
    searchFiltersShrink?: string;
    /**
     * @remarks
     * The top K of keyword retrieval. Chunks that exactly match the keywords of the input text are retrieved from the knowledge base. This filters out irrelevant chunks and boosts accuracy. Valid values: 0 to 100. The sum of the `DenseSimilarityTopK` and `SparseSimilarityTopK` parameters must be less than or equal to 200.
     *
     * Default value: 100.
     *
     * @example
     * 100
     */
    sparseSimilarityTopK?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RetrieveResponseBody extends $tea.Model {
    /**
     * @remarks
     * HTTP status code
     *
     * @example
     * Index.InvalidParameter
     */
    code?: string;
    /**
     * @remarks
     * The returned data.
     */
    data?: RetrieveResponseBodyData;
    /**
     * @remarks
     * The error message.
     *
     * @example
     * Required parameter(%s) missing or invalid, please check the request parameters.
     */
    message?: string;
    /**
     * @remarks
     * The request ID.
     *
     * @example
     * 17204B98-7734-4F9A-8464-2446A84821CA
     */
    requestId?: string;
    /**
     * @remarks
     * The HTTP status code returned.
     *
     * @example
     * 200
     */
    status?: string;
    /**
     * @remarks
     * Indications whether the API call is successful. Valid values:
     *
     * *   true
     * *   false
     *
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RetrieveResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: RetrieveResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SubmitIndexAddDocumentsJobRequest extends $tea.Model {
    /**
     * @remarks
     * The list of primary key IDs of the category.
     */
    categoryIds?: string[];
    /**
     * @remarks
     * The list of the primary key IDs of the documents.
     */
    documentIds?: string[];
    /**
     * @remarks
     * The primary key ID of the knowledge base, which is the `Data.Id` parameter returned by the [CreateIndex](https://www.alibabacloud.com/help/en/model-studio/developer-reference/api-bailian-2023-12-29-createindex) operation.
     *
     * This parameter is required.
     *
     * @example
     * 79c0aly8zw
     */
    indexId?: string;
    /**
     * @remarks
     * The data type of [Data Management](https://bailian.console.aliyun.com/#/data-center). For more information, see [Create a knowledge base](https://www.alibabacloud.com/help/en/model-studio/user-guide/rag-knowledge-base). Valid values:
     *
     * *   DATA_CENTER_CATEGORY: The category type. Import all documents from one or more categories in Data Center.
     * *   DATA_CENTER_FILE: The document type. Import one or more documents from Data Center.
     *
     * >  If this parameter is set to DATA_CENTER_CATEGORY, you must specify the `CategoryIds` parameter. If this parameter is set to DATA_CENTER_FILE, you must specify the `DocumentIds` parameter.
     *
     * This parameter is required.
     *
     * @example
     * DATA_CENTER_FILE
     */
    sourceType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SubmitIndexAddDocumentsJobShrinkRequest extends $tea.Model {
    /**
     * @remarks
     * The list of primary key IDs of the category.
     */
    categoryIdsShrink?: string;
    /**
     * @remarks
     * The list of the primary key IDs of the documents.
     */
    documentIdsShrink?: string;
    /**
     * @remarks
     * The primary key ID of the knowledge base, which is the `Data.Id` parameter returned by the [CreateIndex](https://www.alibabacloud.com/help/en/model-studio/developer-reference/api-bailian-2023-12-29-createindex) operation.
     *
     * This parameter is required.
     *
     * @example
     * 79c0aly8zw
     */
    indexId?: string;
    /**
     * @remarks
     * The data type of [Data Management](https://bailian.console.aliyun.com/#/data-center). For more information, see [Create a knowledge base](https://www.alibabacloud.com/help/en/model-studio/user-guide/rag-knowledge-base). Valid values:
     *
     * *   DATA_CENTER_CATEGORY: The category type. Import all documents from one or more categories in Data Center.
     * *   DATA_CENTER_FILE: The document type. Import one or more documents from Data Center.
     *
     * >  If this parameter is set to DATA_CENTER_CATEGORY, you must specify the `CategoryIds` parameter. If this parameter is set to DATA_CENTER_FILE, you must specify the `DocumentIds` parameter.
     *
     * This parameter is required.
     *
     * @example
     * DATA_CENTER_FILE
     */
    sourceType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SubmitIndexAddDocumentsJobResponseBody extends $tea.Model {
    /**
     * @remarks
     * HTTP status code
     *
     * @example
     * Index.InvalidParameter
     */
    code?: string;
    /**
     * @remarks
     * The data returned.
     */
    data?: SubmitIndexAddDocumentsJobResponseBodyData;
    /**
     * @remarks
     * The error message.
     *
     * @example
     * Required parameter(%s) missing or invalid, please check the request parameters.
     */
    message?: string;
    /**
     * @remarks
     * The request ID.
     *
     * @example
     * 778C0B3B-03C1-5FC1-A947-36EDD13606AB
     */
    requestId?: string;
    /**
     * @remarks
     * The HTTP status code returned.
     *
     * @example
     * 200
     */
    status?: string;
    /**
     * @remarks
     * Indications whether the API call is successful. Valid values:
     *
     * *   true
     * *   false
     *
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SubmitIndexAddDocumentsJobResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: SubmitIndexAddDocumentsJobResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SubmitIndexJobRequest extends $tea.Model {
    /**
     * @remarks
     * The primary key ID of the knowledge base, which is the `Data.Id` parameter returned by the [CreateIndex](https://www.alibabacloud.com/help/en/model-studio/developer-reference/api-bailian-2023-12-29-createindex) operation.
     *
     * This parameter is required.
     *
     * @example
     * 79c0aly8zw
     */
    indexId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SubmitIndexJobResponseBody extends $tea.Model {
    /**
     * @remarks
     * HTTP status code
     *
     * @example
     * InvalidParameter
     */
    code?: string;
    /**
     * @remarks
     * The data returned.
     */
    data?: SubmitIndexJobResponseBodyData;
    /**
     * @remarks
     * The error message.
     *
     * @example
     * Required parameter(%s) missing or invalid, please check the request parameters.
     */
    message?: string;
    /**
     * @remarks
     * The request ID.
     *
     * @example
     * 17204B98-xxxx-4F9A-8464-2446A84821CA
     */
    requestId?: string;
    /**
     * @remarks
     * The status code.
     *
     * @example
     * Success
     */
    status?: string;
    /**
     * @remarks
     * Indications whether the API call is successful. Valid values:
     *
     * *   true
     * *   false
     *
     * @example
     * True
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SubmitIndexJobResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: SubmitIndexJobResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateAndPublishAgentRequest extends $tea.Model {
    applicationConfig?: UpdateAndPublishAgentRequestApplicationConfig;
    instructions?: string;
    modelId?: string;
    name?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateAndPublishAgentShrinkRequest extends $tea.Model {
    applicationConfigShrink?: string;
    instructions?: string;
    modelId?: string;
    name?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateAndPublishAgentResponseBody extends $tea.Model {
    code?: string;
    data?: string;
    httpStatusCode?: number;
    message?: string;
    requestId?: string;
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateAndPublishAgentResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateAndPublishAgentResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateFileTagRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    tags?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateFileTagShrinkRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    tagsShrink?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateFileTagResponseBody extends $tea.Model {
    /**
     * @example
     * Success
     */
    code?: string;
    data?: UpdateFileTagResponseBodyData;
    /**
     * @example
     * Requests throttling triggered.
     */
    message?: string;
    /**
     * @remarks
     * RequestId
     *
     * @example
     * 35A267BF-xxxx-54DB-8394-AA3B0742D833
     */
    requestId?: string;
    /**
     * @example
     * 200
     */
    status?: string;
    /**
     * @example
     * true
     */
    success?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateFileTagResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateFileTagResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateMemoryRequest extends $tea.Model {
    description?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateMemoryResponseBody extends $tea.Model {
    /**
     * @example
     * 6a71f2d9-f1c9-913b-818b-114029103cad
     */
    requestId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateMemoryResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateMemoryResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateMemoryNodeRequest extends $tea.Model {
    /**
     * @remarks
     * This parameter is required.
     */
    content?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateMemoryNodeResponseBody extends $tea.Model {
    /**
     * @example
     * 8C56C7AF-6573-19CE-B018-E05E1EDCF4C5
     */
    requestId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateMemoryNodeResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdateMemoryNodeResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdatePromptTemplateRequest extends $tea.Model {
    content?: string;
    name?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdatePromptTemplateResponseBody extends $tea.Model {
    /**
     * @example
     * FE9B6CBF-47E6-5D76-9C5D-B814DD5ABxxx
     */
    requestId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdatePromptTemplateResponse extends $tea.Model {
    headers?: {
        [key: string]: string;
    };
    statusCode?: number;
    body?: UpdatePromptTemplateResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddCategoryResponseBodyData extends $tea.Model {
    /**
     * @example
     * cate_cdd11b1b79a74e8bbd675c356a91ee3XXXXXXXX
     */
    categoryId?: string;
    categoryName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AddFileResponseBodyData extends $tea.Model {
    /**
     * @remarks
     * The primary key ID of the document. We recommend that you store the ID because it is required for all subsequent API operations related to this document.
     *
     * @example
     * file_9a65732555b54d5ea10796ca5742ba22_XXXXXXXX
     */
    fileId?: string;
    /**
     * @remarks
     * The parser that is used to parse the document. Valid value:
     *
     * *   DASHSCOPE_DOCMIND: Intelligent document parsing by Alibaba Cloud.
     *
     * @example
     * DASHSCOPE_DOCMIND
     */
    parser?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ApplyFileUploadLeaseResponseBodyDataParam extends $tea.Model {
    /**
     * @remarks
     * The key-value pair to be placed in the Header. Both the key and the value are strings.
     *
     * @example
     * "X-bailian-extra": "MTAwNTQyNjQ5NTE2OTE3OA==",
     *         "Content-Type": "application/pdf"
     */
    headers?: any;
    /**
     * @remarks
     * The HTTP call method. Valid values:
     *
     * *   PUT
     * *   POST
     *
     * @example
     * PUT
     */
    method?: string;
    /**
     * @remarks
     * The upload URL of the document.
     *
     * @example
     * https://bailian-datahub-data-origin-prod.oss-cn-hangzhou.aliyuncs.com/1005426495169178/10024405/68abd1dea7b6404d8f7d7b9f7fbd332d.1716698936847.pdf?Expires=1716699536&OSSAccessKeyId=TestID&Signature=HfwPUZo4pR6DatSDym0zFKVh9Wg%3D
     */
    url?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ApplyFileUploadLeaseResponseBodyData extends $tea.Model {
    /**
     * @remarks
     * The unique ID of the lease.
     *
     * @example
     * 1e6a159107384782be5e45ac4759b247.1719325231035
     */
    fileUploadLeaseId?: string;
    /**
     * @remarks
     * The HTTP request parameters used to upload the document.
     */
    param?: ApplyFileUploadLeaseResponseBodyDataParam;
    /**
     * @remarks
     * The upload method of the document. Valid values:
     *
     * *   OSS.PreSignedURL
     * *   HTTP
     *
     * @example
     * HTTP
     */
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAndPulishAgentRequestApplicationConfigHistoryConfig extends $tea.Model {
    enableAdbRecord?: boolean;
    enableRecord?: boolean;
    instanceId?: string;
    region?: string;
    storeCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAndPulishAgentRequestApplicationConfigLongTermMemory extends $tea.Model {
    enable?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAndPulishAgentRequestApplicationConfigParameters extends $tea.Model {
    dialogRound?: number;
    maxTokens?: number;
    temperature?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAndPulishAgentRequestApplicationConfigRagConfig extends $tea.Model {
    enableCitation?: boolean;
    enableSearch?: boolean;
    knowledgeBaseCodeList?: string[];
    topK?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAndPulishAgentRequestApplicationConfigSecurityConfig extends $tea.Model {
    processingStrategy?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAndPulishAgentRequestApplicationConfigTools extends $tea.Model {
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAndPulishAgentRequestApplicationConfigWorkFlows extends $tea.Model {
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateAndPulishAgentRequestApplicationConfig extends $tea.Model {
    historyConfig?: CreateAndPulishAgentRequestApplicationConfigHistoryConfig;
    longTermMemory?: CreateAndPulishAgentRequestApplicationConfigLongTermMemory;
    parameters?: CreateAndPulishAgentRequestApplicationConfigParameters;
    ragConfig?: CreateAndPulishAgentRequestApplicationConfigRagConfig;
    securityConfig?: CreateAndPulishAgentRequestApplicationConfigSecurityConfig;
    tools?: CreateAndPulishAgentRequestApplicationConfigTools[];
    workFlows?: CreateAndPulishAgentRequestApplicationConfigWorkFlows[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateIndexRequestColumns extends $tea.Model {
    column?: string;
    isRecall?: boolean;
    isSearch?: boolean;
    name?: string;
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateIndexRequestDataSource extends $tea.Model {
    /**
     * @remarks
     * >  This parameter is not available. Do not specify this parameter.
     */
    credentialId?: string;
    /**
     * @remarks
     * >  This parameter is not available. Do not specify this parameter.
     */
    credentialKey?: string;
    /**
     * @remarks
     * >  This parameter is not available. Do not specify this parameter.
     */
    database?: string;
    /**
     * @remarks
     * >  This parameter is not available. Do not specify this parameter.
     */
    endpoint?: string;
    /**
     * @remarks
     * >  This parameter is not available. Do not specify this parameter.
     */
    isPrivateLink?: boolean;
    /**
     * @remarks
     * >  This parameter is not available. Do not specify this parameter.
     */
    region?: string;
    /**
     * @remarks
     * >  This parameter is not available. Do not specify this parameter.
     */
    subPath?: string;
    /**
     * @remarks
     * >  This parameter is not available. Do not specify this parameter.
     */
    subType?: string;
    /**
     * @remarks
     * >  This parameter is not available. Do not specify this parameter.
     */
    table?: string;
    /**
     * @remarks
     * >  This parameter is not available. Do not specify this parameter.
     */
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateIndexRequestMetaExtractColumns extends $tea.Model {
    desc?: string;
    enableLlm?: boolean;
    enableSearch?: boolean;
    key?: string;
    type?: string;
    value?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateIndexResponseBodyData extends $tea.Model {
    /**
     * @remarks
     * The primary key ID of the knowledge base, `IndexId`.
     *
     * >  We recommend that you store this ID. It is required for all subsequent API operations related to this knowledge base.
     *
     * @example
     * jkurxhju6b
     */
    id?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteCategoryResponseBodyData extends $tea.Model {
    /**
     * @example
     * cate_cdd11b1b79a74e8bbd675c356a91ee3XXXXXXXX
     */
    categoryId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteFileResponseBodyData extends $tea.Model {
    /**
     * @example
     * file_9a65732555b54d5ea10796ca5742ba22_XXXXXXXX
     */
    fileId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DeleteIndexDocumentResponseBodyData extends $tea.Model {
    /**
     * @remarks
     * The list of primary key IDs of documents that are deleted.
     */
    deletedDocument?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class DescribeFileResponseBodyData extends $tea.Model {
    /**
     * @remarks
     * The ID of the category to which the document belongs.
     *
     * @example
     * cate_cdd11b1b79a74e8bbd675c356a91ee3XXXXXXXX
     */
    categoryId?: string;
    /**
     * @remarks
     * The timestamp when the document was uploaded to Model Studio. Format: yyyy-MM-dd HH:mm:ss. Time zone: UTC + 8.
     *
     * @example
     * 2024-05-26 12:45:43
     */
    createTime?: string;
    /**
     * @remarks
     * The primary key ID of the document.
     *
     * @example
     * file_9a65732555b54d5ea10796ca5742ba22_XXXXXXXX
     */
    fileId?: string;
    /**
     * @remarks
     * The name of the document.
     *
     * @example
     * test.pdf
     */
    fileName?: string;
    /**
     * @remarks
     * The file type of the document. The value is an extension. Valid values: pdf, docx, doc, txt, md, pptx, and ppt.
     *
     * @example
     * pdf
     */
    fileType?: string;
    /**
     * @remarks
     * The parser that is used to parse the document. Valid value:
     *
     * *   DASHSCOPE_DOCMIND: The default document parser.
     *
     * @example
     * DASHSCOPE_DOCMIND
     */
    parser?: string;
    /**
     * @remarks
     * The size of the document. Unit: bytes.
     *
     * @example
     * 1234
     */
    sizeInBytes?: number;
    /**
     * @remarks
     * The status of the document. Valid values:
     *
     * *   INIT: pending parsing.
     * *   PARSING
     * *   PARSE_SUCCESS
     * *   PARSE_FAILED
     *
     * @example
     * PARSE_SUCCESS
     */
    status?: string;
    /**
     * @remarks
     * The tags that are associated with the document. A document can be associated with multiple tags.
     */
    tags?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetIndexJobStatusResponseBodyDataDocuments extends $tea.Model {
    /**
     * @remarks
     * HTTP status code
     *
     * @example
     * Index.Document.ChunkError
     */
    code?: string;
    /**
     * @remarks
     * The primary key ID of the document.
     *
     * @example
     * file_9a65732555b54d5ea10796ca5742ba22_XXXXXXXX
     */
    docId?: string;
    /**
     * @remarks
     * The name of the document.
     */
    docName?: string;
    /**
     * @remarks
     * The error message.
     *
     * @example
     * document parse error
     */
    message?: string;
    /**
     * @remarks
     * The import status of the document. Valid values:
     *
     * *   INSERT_ERROR
     * *   RUNNING
     * *   DELETED
     * *   FINISH
     *
     * @example
     * RUNNING
     */
    status?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetIndexJobStatusResponseBodyData extends $tea.Model {
    /**
     * @remarks
     * The list of imported documents.
     */
    documents?: GetIndexJobStatusResponseBodyDataDocuments[];
    /**
     * @remarks
     * The ID of the job.
     *
     * @example
     * 66122af12a4e45ddae6bd6c845556647
     */
    jobId?: string;
    /**
     * @remarks
     * The status of the knowledge base job. Valid values:
     *
     * *   COMPLETED
     * *   FAILED
     * *   RUNNING
     * *   PENDING
     *
     * @example
     * PENDING
     */
    status?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetPublishedAgentResponseBodyDataApplicationConfigHistoryConfig extends $tea.Model {
    enableAdbRecord?: boolean;
    enableRecord?: boolean;
    instanceId?: string;
    region?: string;
    storeCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetPublishedAgentResponseBodyDataApplicationConfigLongTermMemory extends $tea.Model {
    enable?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetPublishedAgentResponseBodyDataApplicationConfigParameters extends $tea.Model {
    dialogRound?: number;
    maxTokens?: number;
    temperature?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetPublishedAgentResponseBodyDataApplicationConfigRagConfig extends $tea.Model {
    enableCitation?: boolean;
    enableSearch?: boolean;
    knowledgeBaseCodeList?: string[];
    topK?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetPublishedAgentResponseBodyDataApplicationConfigSecurity extends $tea.Model {
    processingStrategy?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetPublishedAgentResponseBodyDataApplicationConfigTools extends $tea.Model {
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetPublishedAgentResponseBodyDataApplicationConfigWorkFlows extends $tea.Model {
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetPublishedAgentResponseBodyDataApplicationConfig extends $tea.Model {
    historyConfig?: GetPublishedAgentResponseBodyDataApplicationConfigHistoryConfig;
    longTermMemory?: GetPublishedAgentResponseBodyDataApplicationConfigLongTermMemory;
    parameters?: GetPublishedAgentResponseBodyDataApplicationConfigParameters;
    ragConfig?: GetPublishedAgentResponseBodyDataApplicationConfigRagConfig;
    security?: GetPublishedAgentResponseBodyDataApplicationConfigSecurity;
    tools?: GetPublishedAgentResponseBodyDataApplicationConfigTools[];
    workFlows?: GetPublishedAgentResponseBodyDataApplicationConfigWorkFlows[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class GetPublishedAgentResponseBodyData extends $tea.Model {
    applicationConfig?: GetPublishedAgentResponseBodyDataApplicationConfig;
    code?: string;
    instructions?: string;
    modelId?: string;
    name?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListCategoryResponseBodyDataCategoryList extends $tea.Model {
    /**
     * @example
     * cate_cdd11b1b79a74e8bbd675c356a91ee3XXXXXXXX
     */
    categoryId?: string;
    categoryName?: string;
    /**
     * @example
     * UNSTRUCTURED
     */
    categoryType?: string;
    /**
     * @example
     * true
     */
    isDefault?: boolean;
    /**
     * @example
     * cate_addd11b1b79a74e8bbd675c356a91ee3XXXXXXXX
     */
    parentCategoryId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListCategoryResponseBodyData extends $tea.Model {
    categoryList?: ListCategoryResponseBodyDataCategoryList[];
    /**
     * @example
     * true
     */
    hasNext?: boolean;
    /**
     * @example
     * 20
     */
    maxResults?: number;
    /**
     * @example
     * AAAAALHWGpGoYCcYMxiFfmlhvh7Z4G8jiXR6IjHYd+M9WQVJ
     */
    nextToken?: string;
    /**
     * @example
     * 20
     */
    totalCount?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListChunksResponseBodyDataNodes extends $tea.Model {
    /**
     * @remarks
     * The metadata map of the chunk.
     */
    metadata?: any;
    /**
     * @remarks
     * The similarity score of the chunk.
     *
     * @example
     * 0.3
     */
    score?: number;
    /**
     * @remarks
     * The text of the chunk.
     */
    text?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListChunksResponseBodyData extends $tea.Model {
    /**
     * @remarks
     * The list of chunks.
     */
    nodes?: ListChunksResponseBodyDataNodes[];
    /**
     * @remarks
     * The total number of chunks returned.
     *
     * @example
     * 16
     */
    total?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListFileResponseBodyDataFileList extends $tea.Model {
    /**
     * @example
     * cate_cdd11b1b79a74e8bbd675c356a91ee3510024405
     */
    categoryId?: string;
    /**
     * @example
     * 2023-08-18 11:03:35
     */
    createTime?: string;
    /**
     * @example
     * file_5ff599b3455a45db8c41b0054b361518_10098576
     */
    fileId?: string;
    /**
     * @example
     * auto-test-1721096109278.pdf
     */
    fileName?: string;
    /**
     * @example
     * docx
     */
    fileType?: string;
    /**
     * @example
     * DASHSCOPE_DOCMIND
     */
    parser?: string;
    /**
     * @example
     * 512
     */
    sizeInBytes?: number;
    /**
     * @example
     * 200
     */
    status?: string;
    tags?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListFileResponseBodyData extends $tea.Model {
    fileList?: ListFileResponseBodyDataFileList[];
    /**
     * @example
     * true
     */
    hasNext?: boolean;
    /**
     * @example
     * 20
     */
    maxResults?: number;
    /**
     * @example
     * 4jzbJk9J6lNeuXD9hP0viA==
     */
    nextToken?: string;
    /**
     * @example
     * 48
     */
    totalCount?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListIndexDocumentsResponseBodyDataDocuments extends $tea.Model {
    /**
     * @remarks
     * The error status code of document import.
     *
     * @example
     * 110002
     */
    code?: string;
    /**
     * @remarks
     * The format of the document. Valid values: pdf, docx, doc, txt, md, pptx, ppt, and EXCEL.
     *
     * @example
     * pdf
     */
    documentType?: string;
    /**
     * @remarks
     * The primary key ID of the document.
     *
     * @example
     * doc_c134aa2073204a5d936d870bf960f56a10024701
     */
    id?: string;
    /**
     * @remarks
     * The error message of document import.
     *
     * @example
     * check fileUrlKey[file_path] / fileNameKey[null] / fileExtensionKey[file_extension] is invalid
     */
    message?: string;
    /**
     * @remarks
     * The name of the document.
     */
    name?: string;
    /**
     * @remarks
     * The size of the document. Unit: bytes.
     *
     * @example
     * 996764
     */
    size?: number;
    /**
     * @remarks
     * For unstructured knowledge base, this parameter is the category ID. To view the category ID, you can click the ID icon next to the category name on the Unstructured Data tab of the [Data Management](https://bailian.console.aliyun.com/#/data-center) page.
     *
     * For structured knowledge base, this parameter is the data table ID. To view the table ID, you can click the ID icon next to the table name on the Structured Data tab of the [Data Management](https://bailian.console.aliyun.com/#/data-center) page.
     *
     * @example
     * cate_21a407a3372c4ba7aedc649709143f0c10021401
     */
    sourceId?: string;
    /**
     * @remarks
     * The import status of the document. Valid values:
     *
     * *   INSERT_ERROR
     * *   RUNNING
     * *   DELETED
     * *   FINISH
     *
     * @example
     * RUNNING
     */
    status?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListIndexDocumentsResponseBodyData extends $tea.Model {
    /**
     * @remarks
     * The list of documents in the knowledge base.
     */
    documents?: ListIndexDocumentsResponseBodyDataDocuments[];
    /**
     * @remarks
     * The primary key ID of the knowledge base.
     *
     * @example
     * pno97tn8iu
     */
    indexId?: string;
    /**
     * @remarks
     * The specified page number.
     *
     * @example
     * 1
     */
    pageNumber?: number;
    /**
     * @remarks
     * The specified number of documents on each page.
     *
     * @example
     * 10
     */
    pageSize?: number;
    /**
     * @remarks
     * The total number of documents returned.
     *
     * @example
     * 2437
     */
    totalCount?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListIndicesResponseBodyDataIndices extends $tea.Model {
    /**
     * @remarks
     * The estimated length of chunks. Valid values: [1-2048].
     *
     * @example
     * 5
     */
    chunkSize?: number;
    /**
     * @remarks
     * The description of the knowledge base.
     *
     * @example
     * If each RAM user belongs to a RAM group, the configuration is considered compliant.
     */
    description?: string;
    /**
     * @remarks
     * The list of the primary key IDs of the documents.
     */
    documentIds?: string[];
    /**
     * @remarks
     * The name of the embedding model. Valid values:
     *
     * *   text-embedding-v2
     *
     * @example
     * conv-rewrite-qwen-1.8b
     */
    embeddingModelName?: string;
    /**
     * @remarks
     * The primary key ID of the knowledge base, which is the `Data.Id` parameter returned by the [CreateIndex](https://www.alibabacloud.com/help/en/model-studio/developer-reference/api-bailian-2023-12-29-createindex) operation.
     *
     * @example
     * 259899
     */
    id?: string;
    /**
     * @remarks
     * The name of the knowledge base.
     *
     * @example
     * temp_mUB4j
     */
    name?: string;
    /**
     * @remarks
     * The overlap length. Valid values: [0-1024].
     *
     * @example
     * 10
     */
    overlapSize?: number;
    /**
     * @remarks
     * Similarity Threshold Valid values: [0.01-1.00].
     *
     * @example
     * 0.01
     */
    rerankMinScore?: string;
    /**
     * @remarks
     * The name of the rank model. Valid values:
     *
     * *   gte-rerank-hybrid
     * *   gte-rerank
     *
     * @example
     * gte-rerank-hybrid
     */
    rerankModelName?: string;
    /**
     * @remarks
     * The clause identifier. Separate multiple clause identifiers with |. Valid values:
     *
     * *   \\n: line break
     * *   ，: Chinese comma
     * *   ,: English comma
     * *   。 : Chinese full stop
     * *   .: English full stop
     * *   ！ : Chinese exclamation point
     * *   ! : English exclamation point
     * *   ；: Chinese semicolon
     * *   ;: English semicolon
     * *   ？ : Chinese question mark
     * *   ?: English question mark
     *
     * @example
     * \\n
     */
    separator?: string;
    /**
     * @remarks
     * The ID of the vector storage instance.
     *
     * @example
     * gp-bp1gq62t1788yw2ol
     */
    sinkInstanceId?: string;
    /**
     * @remarks
     * The region of the vector storage instance.
     *
     * @example
     * cn-hangzhou
     */
    sinkRegion?: string;
    /**
     * @remarks
     * The vector storage type of the knowledge base. Valid values:
     *
     * *   ES: Built-in vector database.
     * *   BUILT_IN: Built-in vector database.
     * *   ADB: AnalyticDB for PostgreSQL database.
     *
     * @example
     * es
     */
    sinkType?: string;
    /**
     * @remarks
     * The data type of [Data Management](https://bailian.console.aliyun.com/#/data-center). For unstructured knowledge base, possible values:
     *
     * *   DATA_CENTER_CATEGORY: The category type.
     * *   DATA_CENTER_FILE: The document type.
     *
     * For structured knowledge base, possible values:
     *
     * *   DATA_CENTER_STRUCTURED_TABLE: The data table type.
     *
     * @example
     * DATA_CENTER_FILE
     */
    sourceType?: string;
    /**
     * @remarks
     * The vector storage type of the knowledge base. Valid values:
     *
     * *   UNSTRUCTURED
     *
     * @example
     * structured
     */
    structureType?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListIndicesResponseBodyData extends $tea.Model {
    /**
     * @remarks
     * The list of knowledge bases.
     */
    indices?: ListIndicesResponseBodyDataIndices[];
    /**
     * @remarks
     * The specified page number.
     *
     * @example
     * 1
     */
    pageNumber?: number;
    /**
     * @remarks
     * The specified number of documents on each page.
     *
     * @example
     * 10
     */
    pageSize?: number;
    /**
     * @remarks
     * The total number of knowledge bases returned.
     *
     * @example
     * 48
     */
    totalCount?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListMemoriesResponseBodyMemories extends $tea.Model {
    description?: string;
    /**
     * @example
     * 3fc531f4519444beaafffa4538f60667
     */
    memoryId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListMemoryNodesResponseBodyMemoryNodes extends $tea.Model {
    content?: string;
    /**
     * @example
     * 68de06c95368463a8be4a84efc872cc5
     */
    memoryNodeId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListPromptTemplatesResponseBodyPromptTemplates extends $tea.Model {
    content?: string;
    name?: string;
    /**
     * @example
     * d6935b7efbe34d11b13df9307151cf8c
     */
    promptTemplateId?: string;
    /**
     * @example
     * "System"
     */
    type?: string;
    variables?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListPublishedAgentResponseBodyDataListApplicationConfigHistoryConfig extends $tea.Model {
    enableAdbRecord?: boolean;
    enableRecord?: boolean;
    instanceId?: string;
    region?: string;
    storeCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListPublishedAgentResponseBodyDataListApplicationConfigLongTermMemory extends $tea.Model {
    enable?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListPublishedAgentResponseBodyDataListApplicationConfigParameters extends $tea.Model {
    dialogRound?: number;
    maxTokens?: number;
    temperature?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListPublishedAgentResponseBodyDataListApplicationConfigRagConfig extends $tea.Model {
    enableCitation?: boolean;
    enableSearch?: boolean;
    knowledgeBaseCodeList?: string[];
    topK?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListPublishedAgentResponseBodyDataListApplicationConfigSecurity extends $tea.Model {
    processingStrategy?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListPublishedAgentResponseBodyDataListApplicationConfigTools extends $tea.Model {
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListPublishedAgentResponseBodyDataListApplicationConfigWorkFlows extends $tea.Model {
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListPublishedAgentResponseBodyDataListApplicationConfig extends $tea.Model {
    historyConfig?: ListPublishedAgentResponseBodyDataListApplicationConfigHistoryConfig;
    longTermMemory?: ListPublishedAgentResponseBodyDataListApplicationConfigLongTermMemory;
    parameters?: ListPublishedAgentResponseBodyDataListApplicationConfigParameters;
    ragConfig?: ListPublishedAgentResponseBodyDataListApplicationConfigRagConfig;
    security?: ListPublishedAgentResponseBodyDataListApplicationConfigSecurity;
    tools?: ListPublishedAgentResponseBodyDataListApplicationConfigTools[];
    workFlows?: ListPublishedAgentResponseBodyDataListApplicationConfigWorkFlows[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListPublishedAgentResponseBodyDataList extends $tea.Model {
    applicationConfig?: ListPublishedAgentResponseBodyDataListApplicationConfig;
    code?: string;
    instructions?: string;
    modelId?: string;
    name?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class ListPublishedAgentResponseBodyData extends $tea.Model {
    list?: ListPublishedAgentResponseBodyDataList[];
    pageNo?: number;
    pageSize?: number;
    total?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RetrieveRequestRerank extends $tea.Model {
    /**
     * @remarks
     * The name of the rank model. For more information, see [Create a knowledge base](https://www.alibabacloud.com/help/en/model-studio/user-guide/rag-knowledge-base). Valid values:
     *
     * *   gte-rerank-hybrid: Recommended official model.
     * *   gte-rerank
     *
     * @example
     * gte-rerank-hybrid
     */
    modelName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RetrieveRequestRewrite extends $tea.Model {
    /**
     * @remarks
     * Conversation rewriting model name. The query rewriting model automatically adjusts the original prompt based on the context to improve retrieval performance. Valid value:
     *
     * *   conv-rewrite-qwen-1.8b
     *
     * By default, this parameter is left empty, which means conv-rewrite-qwen-1.8b is used.
     *
     * @example
     * conv-rewrite-qwen-1.8b
     */
    modelName?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RetrieveResponseBodyDataNodes extends $tea.Model {
    /**
     * @remarks
     * The metadata map of the chunk.
     */
    metadata?: any;
    /**
     * @remarks
     * The similarity score of the chunk. Valid values:[0-1].
     *
     * @example
     * 0.3
     */
    score?: number;
    /**
     * @remarks
     * The text of the chunk.
     */
    text?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class RetrieveResponseBodyData extends $tea.Model {
    /**
     * @remarks
     * The list of queried chunks.
     */
    nodes?: RetrieveResponseBodyDataNodes[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SubmitIndexAddDocumentsJobResponseBodyData extends $tea.Model {
    /**
     * @remarks
     * The primary key ID of the task, `JobId`.
     *
     * @example
     * 42687eb254a34802bed398357f5498ae
     */
    id?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class SubmitIndexJobResponseBodyData extends $tea.Model {
    /**
     * @remarks
     * The primary key ID of the job, which is the `JobId` parameter of the [GetIndexJobStatus](https://www.alibabacloud.com/help/en/model-studio/developer-reference/api-bailian-2023-12-29-getindexjobstatus) operation.
     *
     * @example
     * eFDr2fGRzP9gdDZWAdo3YQ==
     */
    id?: string;
    /**
     * @remarks
     * The primary key ID of the knowledge base.
     *
     * @example
     * khdyak1uuj
     */
    indexId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateAndPublishAgentRequestApplicationConfigHistoryConfig extends $tea.Model {
    enableAdbRecord?: boolean;
    enableRecord?: boolean;
    instanceId?: string;
    region?: string;
    storeCode?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateAndPublishAgentRequestApplicationConfigLongTermMemory extends $tea.Model {
    enable?: boolean;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateAndPublishAgentRequestApplicationConfigParameters extends $tea.Model {
    dialogRound?: number;
    maxTokens?: number;
    temperature?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateAndPublishAgentRequestApplicationConfigRagConfig extends $tea.Model {
    enableCitation?: boolean;
    enableSearch?: boolean;
    knowledgeBaseCodeList?: string[];
    topK?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateAndPublishAgentRequestApplicationConfigSecurity extends $tea.Model {
    processingStrategy?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateAndPublishAgentRequestApplicationConfigTools extends $tea.Model {
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateAndPublishAgentRequestApplicationConfigWorkFlows extends $tea.Model {
    type?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateAndPublishAgentRequestApplicationConfig extends $tea.Model {
    historyConfig?: UpdateAndPublishAgentRequestApplicationConfigHistoryConfig;
    longTermMemory?: UpdateAndPublishAgentRequestApplicationConfigLongTermMemory;
    parameters?: UpdateAndPublishAgentRequestApplicationConfigParameters;
    ragConfig?: UpdateAndPublishAgentRequestApplicationConfigRagConfig;
    security?: UpdateAndPublishAgentRequestApplicationConfigSecurity;
    tools?: UpdateAndPublishAgentRequestApplicationConfigTools[];
    workFlows?: UpdateAndPublishAgentRequestApplicationConfigWorkFlows[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class UpdateFileTagResponseBodyData extends $tea.Model {
    /**
     * @example
     * file_9a65732555b54d5ea10796ca5742ba22_xxxxxxxx
     */
    fileId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export default class Client extends OpenApi {
    constructor(config: $OpenApi.Config);
    getEndpoint(productId: string, regionId: string, endpointRule: string, network: string, suffix: string, endpointMap: {
        [key: string]: string;
    }, endpoint: string): string;
    /**
     * @param request - AddCategoryRequest
     * @param headers - map
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns AddCategoryResponse
     */
    addCategoryWithOptions(WorkspaceId: string, request: AddCategoryRequest, headers: {
        [key: string]: string;
    }, runtime: $Util.RuntimeOptions): Promise<AddCategoryResponse>;
    /**
     * @param request - AddCategoryRequest
     * @returns AddCategoryResponse
     */
    addCategory(WorkspaceId: string, request: AddCategoryRequest): Promise<AddCategoryResponse>;
    /**
     * Imports an unstructured document stored in the temporary storage space to Data Management.
     *
     * @remarks
     *   Before you call this operation, make sure that you have obtained the lease and uploaded the document to the temporary storage space by using the [ApplyFileUploadLease](https://help.aliyun.com/zh/model-studio/developer-reference/api-bailian-2023-12-29-applyfileuploadlease) operation. For more information, see [Upload files by calling API](https://help.aliyun.com/zh/model-studio/developer-reference/upload-files-by-calling-api).
     * >  After you call this operation, the used lease ID expires immediately. Do not use the same lease ID to submit new requests.
     * *   You must call this operation within 12 hours after you call the [ApplyFileUploadLease](https://help.aliyun.com/zh/model-studio/developer-reference/api-bailian-2023-12-29-applyfileuploadlease) operation. Otherwise, the lease expires and the request fails.
     * *   After you call this operation, the system parses and imports your document. The process takes some time.
     * *   This interface is not idempotent.
     *
     * @param tmpReq - AddFileRequest
     * @param headers - map
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns AddFileResponse
     */
    addFileWithOptions(WorkspaceId: string, tmpReq: AddFileRequest, headers: {
        [key: string]: string;
    }, runtime: $Util.RuntimeOptions): Promise<AddFileResponse>;
    /**
     * Imports an unstructured document stored in the temporary storage space to Data Management.
     *
     * @remarks
     *   Before you call this operation, make sure that you have obtained the lease and uploaded the document to the temporary storage space by using the [ApplyFileUploadLease](https://help.aliyun.com/zh/model-studio/developer-reference/api-bailian-2023-12-29-applyfileuploadlease) operation. For more information, see [Upload files by calling API](https://help.aliyun.com/zh/model-studio/developer-reference/upload-files-by-calling-api).
     * >  After you call this operation, the used lease ID expires immediately. Do not use the same lease ID to submit new requests.
     * *   You must call this operation within 12 hours after you call the [ApplyFileUploadLease](https://help.aliyun.com/zh/model-studio/developer-reference/api-bailian-2023-12-29-applyfileuploadlease) operation. Otherwise, the lease expires and the request fails.
     * *   After you call this operation, the system parses and imports your document. The process takes some time.
     * *   This interface is not idempotent.
     *
     * @param request - AddFileRequest
     * @returns AddFileResponse
     */
    addFile(WorkspaceId: string, request: AddFileRequest): Promise<AddFileResponse>;
    /**
     * Applies for a document upload lease to upload a document.
     *
     * @remarks
     *   This operation returns an HTTP URL that can be used to upload an unstructured document (the lease) and parameters required for the upload. Structured documents are not supported.
     * *   The HTTP URL returned by this operation is valid only for minutes. Upload the document before the URL expires.
     * *   After you apply for a lease and upload a document, the document is stored in a temporary storage space for 12 hours.
     * *   This interface is not idempotent.
     *
     * @param request - ApplyFileUploadLeaseRequest
     * @param headers - map
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns ApplyFileUploadLeaseResponse
     */
    applyFileUploadLeaseWithOptions(CategoryId: string, WorkspaceId: string, request: ApplyFileUploadLeaseRequest, headers: {
        [key: string]: string;
    }, runtime: $Util.RuntimeOptions): Promise<ApplyFileUploadLeaseResponse>;
    /**
     * Applies for a document upload lease to upload a document.
     *
     * @remarks
     *   This operation returns an HTTP URL that can be used to upload an unstructured document (the lease) and parameters required for the upload. Structured documents are not supported.
     * *   The HTTP URL returned by this operation is valid only for minutes. Upload the document before the URL expires.
     * *   After you apply for a lease and upload a document, the document is stored in a temporary storage space for 12 hours.
     * *   This interface is not idempotent.
     *
     * @param request - ApplyFileUploadLeaseRequest
     * @returns ApplyFileUploadLeaseResponse
     */
    applyFileUploadLease(CategoryId: string, WorkspaceId: string, request: ApplyFileUploadLeaseRequest): Promise<ApplyFileUploadLeaseResponse>;
    /**
     * 创建并发布智能体应用
     *
     * @param tmpReq - CreateAndPulishAgentRequest
     * @param headers - map
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreateAndPulishAgentResponse
     */
    createAndPulishAgentWithOptions(workspaceId: string, tmpReq: CreateAndPulishAgentRequest, headers: {
        [key: string]: string;
    }, runtime: $Util.RuntimeOptions): Promise<CreateAndPulishAgentResponse>;
    /**
     * 创建并发布智能体应用
     *
     * @param request - CreateAndPulishAgentRequest
     * @returns CreateAndPulishAgentResponse
     */
    createAndPulishAgent(workspaceId: string, request: CreateAndPulishAgentRequest): Promise<CreateAndPulishAgentResponse>;
    /**
     * Creates an unstructured knowledge base and imports one or more parsed documents into the knowledge base. You cannot create a structured knowledge base by calling an API operation. Use the console instead.
     *
     * @remarks
     * 1.  You must first upload documents to [Data Management](https://bailian.console.aliyun.com/#/data-center) and obtain the `FileId`. The documents are the knowledge source of the knowledge base. For more information, see [Import Data](https://www.alibabacloud.com/help/en/model-studio/user-guide/data-import-instructions).
     * 2.  This operation only initializes a knowledge base creation job. You must also call the [SubmitIndexJob](https://www.alibabacloud.com/help/en/model-studio/developer-reference/api-bailian-2023-12-29-submitindexjob) operation to complete the job.
     * 3.  This interface is not idempotent.
     *
     * @param tmpReq - CreateIndexRequest
     * @param headers - map
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreateIndexResponse
     */
    createIndexWithOptions(WorkspaceId: string, tmpReq: CreateIndexRequest, headers: {
        [key: string]: string;
    }, runtime: $Util.RuntimeOptions): Promise<CreateIndexResponse>;
    /**
     * Creates an unstructured knowledge base and imports one or more parsed documents into the knowledge base. You cannot create a structured knowledge base by calling an API operation. Use the console instead.
     *
     * @remarks
     * 1.  You must first upload documents to [Data Management](https://bailian.console.aliyun.com/#/data-center) and obtain the `FileId`. The documents are the knowledge source of the knowledge base. For more information, see [Import Data](https://www.alibabacloud.com/help/en/model-studio/user-guide/data-import-instructions).
     * 2.  This operation only initializes a knowledge base creation job. You must also call the [SubmitIndexJob](https://www.alibabacloud.com/help/en/model-studio/developer-reference/api-bailian-2023-12-29-submitindexjob) operation to complete the job.
     * 3.  This interface is not idempotent.
     *
     * @param request - CreateIndexRequest
     * @returns CreateIndexResponse
     */
    createIndex(WorkspaceId: string, request: CreateIndexRequest): Promise<CreateIndexResponse>;
    /**
     * 创建Memory
     *
     * @param request - CreateMemoryRequest
     * @param headers - map
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreateMemoryResponse
     */
    createMemoryWithOptions(workspaceId: string, request: CreateMemoryRequest, headers: {
        [key: string]: string;
    }, runtime: $Util.RuntimeOptions): Promise<CreateMemoryResponse>;
    /**
     * 创建Memory
     *
     * @param request - CreateMemoryRequest
     * @returns CreateMemoryResponse
     */
    createMemory(workspaceId: string, request: CreateMemoryRequest): Promise<CreateMemoryResponse>;
    /**
     * 创建记忆Node
     *
     * @param request - CreateMemoryNodeRequest
     * @param headers - map
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreateMemoryNodeResponse
     */
    createMemoryNodeWithOptions(workspaceId: string, memoryId: string, request: CreateMemoryNodeRequest, headers: {
        [key: string]: string;
    }, runtime: $Util.RuntimeOptions): Promise<CreateMemoryNodeResponse>;
    /**
     * 创建记忆Node
     *
     * @param request - CreateMemoryNodeRequest
     * @returns CreateMemoryNodeResponse
     */
    createMemoryNode(workspaceId: string, memoryId: string, request: CreateMemoryNodeRequest): Promise<CreateMemoryNodeResponse>;
    /**
     * 创建Prompt模板
     *
     * @param request - CreatePromptTemplateRequest
     * @param headers - map
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns CreatePromptTemplateResponse
     */
    createPromptTemplateWithOptions(workspaceId: string, request: CreatePromptTemplateRequest, headers: {
        [key: string]: string;
    }, runtime: $Util.RuntimeOptions): Promise<CreatePromptTemplateResponse>;
    /**
     * 创建Prompt模板
     *
     * @param request - CreatePromptTemplateRequest
     * @returns CreatePromptTemplateResponse
     */
    createPromptTemplate(workspaceId: string, request: CreatePromptTemplateRequest): Promise<CreatePromptTemplateResponse>;
    /**
     * 删除智能体
     *
     * @param headers - map
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns DeleteAgentResponse
     */
    deleteAgentWithOptions(workspaceId: string, appCode: string, headers: {
        [key: string]: string;
    }, runtime: $Util.RuntimeOptions): Promise<DeleteAgentResponse>;
    /**
     * 删除智能体
     * @returns DeleteAgentResponse
     */
    deleteAgent(workspaceId: string, appCode: string): Promise<DeleteAgentResponse>;
    /**
     * @param headers - map
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns DeleteCategoryResponse
     */
    deleteCategoryWithOptions(CategoryId: string, WorkspaceId: string, headers: {
        [key: string]: string;
    }, runtime: $Util.RuntimeOptions): Promise<DeleteCategoryResponse>;
    /**
     * @returns DeleteCategoryResponse
     */
    deleteCategory(CategoryId: string, WorkspaceId: string): Promise<DeleteCategoryResponse>;
    /**
     * 删除文档
     *
     * @param headers - map
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns DeleteFileResponse
     */
    deleteFileWithOptions(FileId: string, WorkspaceId: string, headers: {
        [key: string]: string;
    }, runtime: $Util.RuntimeOptions): Promise<DeleteFileResponse>;
    /**
     * 删除文档
     * @returns DeleteFileResponse
     */
    deleteFile(FileId: string, WorkspaceId: string): Promise<DeleteFileResponse>;
    /**
     * Deletes a specified knowledge base permanently.
     *
     * @remarks
     *   Before you call this operation, make sure that your knowledge base is created and is not deleted. That is, the primary key ID of the knowledge base `IndexId` is valid.
     * *   If a knowledge base is being called by an application, disassociate the knowledge base before you can delete it. To disassociate the knowledge base, you must use the console. For more information, see [Create a knowledge base](https://www.alibabacloud.com/help/en/model-studio/user-guide/rag-knowledge-base).
     * *   After you delete a knowledge base, it cannot be recovered. We recommend that you proceed with caution.
     * *   Imported documents are not deleted from the [Data Management](https://bailian.console.aliyun.com/#/data-center) if you call this operation.
     * *   This interface is idempotent.
     *
     * @param request - DeleteIndexRequest
     * @param headers - map
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns DeleteIndexResponse
     */
    deleteIndexWithOptions(WorkspaceId: string, request: DeleteIndexRequest, headers: {
        [key: string]: string;
    }, runtime: $Util.RuntimeOptions): Promise<DeleteIndexResponse>;
    /**
     * Deletes a specified knowledge base permanently.
     *
     * @remarks
     *   Before you call this operation, make sure that your knowledge base is created and is not deleted. That is, the primary key ID of the knowledge base `IndexId` is valid.
     * *   If a knowledge base is being called by an application, disassociate the knowledge base before you can delete it. To disassociate the knowledge base, you must use the console. For more information, see [Create a knowledge base](https://www.alibabacloud.com/help/en/model-studio/user-guide/rag-knowledge-base).
     * *   After you delete a knowledge base, it cannot be recovered. We recommend that you proceed with caution.
     * *   Imported documents are not deleted from the [Data Management](https://bailian.console.aliyun.com/#/data-center) if you call this operation.
     * *   This interface is idempotent.
     *
     * @param request - DeleteIndexRequest
     * @returns DeleteIndexResponse
     */
    deleteIndex(WorkspaceId: string, request: DeleteIndexRequest): Promise<DeleteIndexResponse>;
    /**
     * Deletes one or more documents from a specified unstructured knowledge base permanently.
     *
     * @remarks
     *   Before you call this operation, make sure that your knowledge base is created and is not deleted. That is, the primary key ID of the knowledge base `IndexId` is valid.
     * *   Only documents with the INSERT_ERROR and FINISH states can be deleted. To query the status of documents in a specified knowledge base, call the [ListIndexDocuments](https://www.alibabacloud.com/help/en/model-studio/developer-reference/api-bailian-2023-12-29-listindexdocuments) operation.
     * *   After you delete a document, it cannot be recovered and the [Retrieve](https://www.alibabacloud.com/help/en/model-studio/developer-reference/api-bailian-2023-12-29-retrieve) operation cannot query information about the document. We recommend that you proceed with caution.
     * *   Imported documents are not deleted from the [Data Management](https://bailian.console.aliyun.com/#/data-center) if you call this operation.
     * *   This interface is idempotent.
     *
     * @param tmpReq - DeleteIndexDocumentRequest
     * @param headers - map
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns DeleteIndexDocumentResponse
     */
    deleteIndexDocumentWithOptions(WorkspaceId: string, tmpReq: DeleteIndexDocumentRequest, headers: {
        [key: string]: string;
    }, runtime: $Util.RuntimeOptions): Promise<DeleteIndexDocumentResponse>;
    /**
     * Deletes one or more documents from a specified unstructured knowledge base permanently.
     *
     * @remarks
     *   Before you call this operation, make sure that your knowledge base is created and is not deleted. That is, the primary key ID of the knowledge base `IndexId` is valid.
     * *   Only documents with the INSERT_ERROR and FINISH states can be deleted. To query the status of documents in a specified knowledge base, call the [ListIndexDocuments](https://www.alibabacloud.com/help/en/model-studio/developer-reference/api-bailian-2023-12-29-listindexdocuments) operation.
     * *   After you delete a document, it cannot be recovered and the [Retrieve](https://www.alibabacloud.com/help/en/model-studio/developer-reference/api-bailian-2023-12-29-retrieve) operation cannot query information about the document. We recommend that you proceed with caution.
     * *   Imported documents are not deleted from the [Data Management](https://bailian.console.aliyun.com/#/data-center) if you call this operation.
     * *   This interface is idempotent.
     *
     * @param request - DeleteIndexDocumentRequest
     * @returns DeleteIndexDocumentResponse
     */
    deleteIndexDocument(WorkspaceId: string, request: DeleteIndexDocumentRequest): Promise<DeleteIndexDocumentResponse>;
    /**
     * 删除memory
     *
     * @param headers - map
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns DeleteMemoryResponse
     */
    deleteMemoryWithOptions(workspaceId: string, memoryId: string, headers: {
        [key: string]: string;
    }, runtime: $Util.RuntimeOptions): Promise<DeleteMemoryResponse>;
    /**
     * 删除memory
     * @returns DeleteMemoryResponse
     */
    deleteMemory(workspaceId: string, memoryId: string): Promise<DeleteMemoryResponse>;
    /**
     * 删除记忆Node
     *
     * @param headers - map
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns DeleteMemoryNodeResponse
     */
    deleteMemoryNodeWithOptions(workspaceId: string, memoryId: string, memoryNodeId: string, headers: {
        [key: string]: string;
    }, runtime: $Util.RuntimeOptions): Promise<DeleteMemoryNodeResponse>;
    /**
     * 删除记忆Node
     * @returns DeleteMemoryNodeResponse
     */
    deleteMemoryNode(workspaceId: string, memoryId: string, memoryNodeId: string): Promise<DeleteMemoryNodeResponse>;
    /**
     * 基于模板Id删除Prompt模板。
     *
     * @param headers - map
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns DeletePromptTemplateResponse
     */
    deletePromptTemplateWithOptions(workspaceId: string, promptTemplateId: string, headers: {
        [key: string]: string;
    }, runtime: $Util.RuntimeOptions): Promise<DeletePromptTemplateResponse>;
    /**
     * 基于模板Id删除Prompt模板。
     * @returns DeletePromptTemplateResponse
     */
    deletePromptTemplate(workspaceId: string, promptTemplateId: string): Promise<DeletePromptTemplateResponse>;
    /**
     * Queries the details of an unstructured document.
     *
     * @remarks
     * Before you call this API, make sure that your document is uploaded to the [Data Management](https://bailian.console.aliyun.com/knowledge-base#/data-center) page of Alibaba Cloud Model Studio.
     * *   You can also call this operation to query unstructured documents that you upload on the [Data Management](https://bailian.console.aliyun.com/knowledge-base#/data-center) page.
     * *   This operation is idempotent.
     * **Throttling:** Make sure that the interval between the two queries is at least 15 seconds. Otherwise, you may trigger system throttling. If throttling is triggered, try again later.
     *
     * @param headers - map
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns DescribeFileResponse
     */
    describeFileWithOptions(WorkspaceId: string, FileId: string, headers: {
        [key: string]: string;
    }, runtime: $Util.RuntimeOptions): Promise<DescribeFileResponse>;
    /**
     * Queries the details of an unstructured document.
     *
     * @remarks
     * Before you call this API, make sure that your document is uploaded to the [Data Management](https://bailian.console.aliyun.com/knowledge-base#/data-center) page of Alibaba Cloud Model Studio.
     * *   You can also call this operation to query unstructured documents that you upload on the [Data Management](https://bailian.console.aliyun.com/knowledge-base#/data-center) page.
     * *   This operation is idempotent.
     * **Throttling:** Make sure that the interval between the two queries is at least 15 seconds. Otherwise, you may trigger system throttling. If throttling is triggered, try again later.
     * @returns DescribeFileResponse
     */
    describeFile(WorkspaceId: string, FileId: string): Promise<DescribeFileResponse>;
    /**
     * Queries the current status of a specified knowledge base creation or add document job.
     *
     * @remarks
     * 1.  A knowledge base job is running. You can call the [SubmitIndexJob](https://www.alibabacloud.com/help/en/model-studio/developer-reference/api-bailian-2023-12-29-submitindexjob) operation to create a creation job or the [SubmitIndexAddDocumentsJob](https://www.alibabacloud.com/help/en/model-studio/developer-reference/api-bailian-2023-12-29-submitindexadddocumentsjob) operation to create a add document job. Then, obtain the `JobId` returned by the operations.
     * 2.  We recommend that you call this operation at intervals of more than 5 seconds.
     * 3.  This interface is idempotent.
     *
     * @param request - GetIndexJobStatusRequest
     * @param headers - map
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetIndexJobStatusResponse
     */
    getIndexJobStatusWithOptions(WorkspaceId: string, request: GetIndexJobStatusRequest, headers: {
        [key: string]: string;
    }, runtime: $Util.RuntimeOptions): Promise<GetIndexJobStatusResponse>;
    /**
     * Queries the current status of a specified knowledge base creation or add document job.
     *
     * @remarks
     * 1.  A knowledge base job is running. You can call the [SubmitIndexJob](https://www.alibabacloud.com/help/en/model-studio/developer-reference/api-bailian-2023-12-29-submitindexjob) operation to create a creation job or the [SubmitIndexAddDocumentsJob](https://www.alibabacloud.com/help/en/model-studio/developer-reference/api-bailian-2023-12-29-submitindexadddocumentsjob) operation to create a add document job. Then, obtain the `JobId` returned by the operations.
     * 2.  We recommend that you call this operation at intervals of more than 5 seconds.
     * 3.  This interface is idempotent.
     *
     * @param request - GetIndexJobStatusRequest
     * @returns GetIndexJobStatusResponse
     */
    getIndexJobStatus(WorkspaceId: string, request: GetIndexJobStatusRequest): Promise<GetIndexJobStatusResponse>;
    /**
     * 获取memory
     *
     * @param headers - map
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetMemoryResponse
     */
    getMemoryWithOptions(workspaceId: string, memoryId: string, headers: {
        [key: string]: string;
    }, runtime: $Util.RuntimeOptions): Promise<GetMemoryResponse>;
    /**
     * 获取memory
     * @returns GetMemoryResponse
     */
    getMemory(workspaceId: string, memoryId: string): Promise<GetMemoryResponse>;
    /**
     * 获取记忆Node
     *
     * @param headers - map
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetMemoryNodeResponse
     */
    getMemoryNodeWithOptions(workspaceId: string, memoryId: string, memoryNodeId: string, headers: {
        [key: string]: string;
    }, runtime: $Util.RuntimeOptions): Promise<GetMemoryNodeResponse>;
    /**
     * 获取记忆Node
     * @returns GetMemoryNodeResponse
     */
    getMemoryNode(workspaceId: string, memoryId: string, memoryNodeId: string): Promise<GetMemoryNodeResponse>;
    /**
     * 基于模板Id获取Prompt模板。
     *
     * @param headers - map
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetPromptTemplateResponse
     */
    getPromptTemplateWithOptions(workspaceId: string, promptTemplateId: string, headers: {
        [key: string]: string;
    }, runtime: $Util.RuntimeOptions): Promise<GetPromptTemplateResponse>;
    /**
     * 基于模板Id获取Prompt模板。
     * @returns GetPromptTemplateResponse
     */
    getPromptTemplate(workspaceId: string, promptTemplateId: string): Promise<GetPromptTemplateResponse>;
    /**
     * 获取发布态智能体应用
     *
     * @param headers - map
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns GetPublishedAgentResponse
     */
    getPublishedAgentWithOptions(workspaceId: string, appCode: string, headers: {
        [key: string]: string;
    }, runtime: $Util.RuntimeOptions): Promise<GetPublishedAgentResponse>;
    /**
     * 获取发布态智能体应用
     * @returns GetPublishedAgentResponse
     */
    getPublishedAgent(workspaceId: string, appCode: string): Promise<GetPublishedAgentResponse>;
    /**
     * ListCategory
     *
     * @param request - ListCategoryRequest
     * @param headers - map
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns ListCategoryResponse
     */
    listCategoryWithOptions(WorkspaceId: string, request: ListCategoryRequest, headers: {
        [key: string]: string;
    }, runtime: $Util.RuntimeOptions): Promise<ListCategoryResponse>;
    /**
     * ListCategory
     *
     * @param request - ListCategoryRequest
     * @returns ListCategoryResponse
     */
    listCategory(WorkspaceId: string, request: ListCategoryRequest): Promise<ListCategoryResponse>;
    /**
     * For unstructured knowledge base, obtains the details of all chunks of a specified document; for structured knowledge base, obtains the details of all chunks.
     *
     * @remarks
     *   Before you call this operation, make sure that your knowledge base is created and is not deleted. That is, the primary key ID of the knowledge base `IndexId` is valid.
     * *   This interface is idempotent.
     *
     * @param request - ListChunksRequest
     * @param headers - map
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns ListChunksResponse
     */
    listChunksWithOptions(WorkspaceId: string, request: ListChunksRequest, headers: {
        [key: string]: string;
    }, runtime: $Util.RuntimeOptions): Promise<ListChunksResponse>;
    /**
     * For unstructured knowledge base, obtains the details of all chunks of a specified document; for structured knowledge base, obtains the details of all chunks.
     *
     * @remarks
     *   Before you call this operation, make sure that your knowledge base is created and is not deleted. That is, the primary key ID of the knowledge base `IndexId` is valid.
     * *   This interface is idempotent.
     *
     * @param request - ListChunksRequest
     * @returns ListChunksResponse
     */
    listChunks(WorkspaceId: string, request: ListChunksRequest): Promise<ListChunksResponse>;
    /**
     * 获取文档列表
     *
     * @param request - ListFileRequest
     * @param headers - map
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns ListFileResponse
     */
    listFileWithOptions(WorkspaceId: string, request: ListFileRequest, headers: {
        [key: string]: string;
    }, runtime: $Util.RuntimeOptions): Promise<ListFileResponse>;
    /**
     * 获取文档列表
     *
     * @param request - ListFileRequest
     * @returns ListFileResponse
     */
    listFile(WorkspaceId: string, request: ListFileRequest): Promise<ListFileResponse>;
    /**
     * Queries the details of one or more documents in a specified knowledge base.
     *
     * @remarks
     *   Before you call this operation, make sure that your knowledge base is created and is not deleted. That is, the primary key ID of the knowledge base `IndexId` is valid.
     * *   This interface is idempotent.
     *
     * @param request - ListIndexDocumentsRequest
     * @param headers - map
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns ListIndexDocumentsResponse
     */
    listIndexDocumentsWithOptions(WorkspaceId: string, request: ListIndexDocumentsRequest, headers: {
        [key: string]: string;
    }, runtime: $Util.RuntimeOptions): Promise<ListIndexDocumentsResponse>;
    /**
     * Queries the details of one or more documents in a specified knowledge base.
     *
     * @remarks
     *   Before you call this operation, make sure that your knowledge base is created and is not deleted. That is, the primary key ID of the knowledge base `IndexId` is valid.
     * *   This interface is idempotent.
     *
     * @param request - ListIndexDocumentsRequest
     * @returns ListIndexDocumentsResponse
     */
    listIndexDocuments(WorkspaceId: string, request: ListIndexDocumentsRequest): Promise<ListIndexDocumentsResponse>;
    /**
     * Lists knowledge bases in a specified workspace.
     *
     * @remarks
     * This interface is idempotent.
     *
     * @param request - ListIndicesRequest
     * @param headers - map
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns ListIndicesResponse
     */
    listIndicesWithOptions(WorkspaceId: string, request: ListIndicesRequest, headers: {
        [key: string]: string;
    }, runtime: $Util.RuntimeOptions): Promise<ListIndicesResponse>;
    /**
     * Lists knowledge bases in a specified workspace.
     *
     * @remarks
     * This interface is idempotent.
     *
     * @param request - ListIndicesRequest
     * @returns ListIndicesResponse
     */
    listIndices(WorkspaceId: string, request: ListIndicesRequest): Promise<ListIndicesResponse>;
    /**
     * 获取memory
     *
     * @param request - ListMemoriesRequest
     * @param headers - map
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns ListMemoriesResponse
     */
    listMemoriesWithOptions(workspaceId: string, request: ListMemoriesRequest, headers: {
        [key: string]: string;
    }, runtime: $Util.RuntimeOptions): Promise<ListMemoriesResponse>;
    /**
     * 获取memory
     *
     * @param request - ListMemoriesRequest
     * @returns ListMemoriesResponse
     */
    listMemories(workspaceId: string, request: ListMemoriesRequest): Promise<ListMemoriesResponse>;
    /**
     * 获取记忆Node列表
     *
     * @param request - ListMemoryNodesRequest
     * @param headers - map
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns ListMemoryNodesResponse
     */
    listMemoryNodesWithOptions(workspaceId: string, memoryId: string, request: ListMemoryNodesRequest, headers: {
        [key: string]: string;
    }, runtime: $Util.RuntimeOptions): Promise<ListMemoryNodesResponse>;
    /**
     * 获取记忆Node列表
     *
     * @param request - ListMemoryNodesRequest
     * @returns ListMemoryNodesResponse
     */
    listMemoryNodes(workspaceId: string, memoryId: string, request: ListMemoryNodesRequest): Promise<ListMemoryNodesResponse>;
    /**
     * 获取Prompt模板列表。
     *
     * @param request - ListPromptTemplatesRequest
     * @param headers - map
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns ListPromptTemplatesResponse
     */
    listPromptTemplatesWithOptions(workspaceId: string, request: ListPromptTemplatesRequest, headers: {
        [key: string]: string;
    }, runtime: $Util.RuntimeOptions): Promise<ListPromptTemplatesResponse>;
    /**
     * 获取Prompt模板列表。
     *
     * @param request - ListPromptTemplatesRequest
     * @returns ListPromptTemplatesResponse
     */
    listPromptTemplates(workspaceId: string, request: ListPromptTemplatesRequest): Promise<ListPromptTemplatesResponse>;
    /**
     * 查询已发布的智能体应用列表
     *
     * @param request - ListPublishedAgentRequest
     * @param headers - map
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns ListPublishedAgentResponse
     */
    listPublishedAgentWithOptions(workspaceId: string, request: ListPublishedAgentRequest, headers: {
        [key: string]: string;
    }, runtime: $Util.RuntimeOptions): Promise<ListPublishedAgentResponse>;
    /**
     * 查询已发布的智能体应用列表
     *
     * @param request - ListPublishedAgentRequest
     * @returns ListPublishedAgentResponse
     */
    listPublishedAgent(workspaceId: string, request: ListPublishedAgentRequest): Promise<ListPublishedAgentResponse>;
    /**
     * Queries information from a specified knowledge base.
     *
     * @remarks
     *   Before you call this operation, make sure that your knowledge base is created and is not deleted. That is, the primary key ID of the knowledge base `IndexId` is valid.
     * *   The response time may be long because this operation involves complex retrieval and matching. We recommend that you set appropriate timeout and retry policy for requests.
     * *   This interface is idempotent.
     *
     * @param tmpReq - RetrieveRequest
     * @param headers - map
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns RetrieveResponse
     */
    retrieveWithOptions(WorkspaceId: string, tmpReq: RetrieveRequest, headers: {
        [key: string]: string;
    }, runtime: $Util.RuntimeOptions): Promise<RetrieveResponse>;
    /**
     * Queries information from a specified knowledge base.
     *
     * @remarks
     *   Before you call this operation, make sure that your knowledge base is created and is not deleted. That is, the primary key ID of the knowledge base `IndexId` is valid.
     * *   The response time may be long because this operation involves complex retrieval and matching. We recommend that you set appropriate timeout and retry policy for requests.
     * *   This interface is idempotent.
     *
     * @param request - RetrieveRequest
     * @returns RetrieveResponse
     */
    retrieve(WorkspaceId: string, request: RetrieveRequest): Promise<RetrieveResponse>;
    /**
     * Adds parsed documents to an unstructured knowledge base.
     *
     * @remarks
     *   You must first upload documents to [Data Management](https://bailian.console.aliyun.com/#/data-center) and obtain the `FileId`. The documents are the knowledge source of the knowledge base. For more information, see [Import Data](https://www.alibabacloud.com/help/en/model-studio/user-guide/data-import-instructions).
     * *   Before you call this operation, make sure that your knowledge base is created and is not deleted. That is, the primary key ID of the knowledge base `IndexId` is valid.
     * *   After you call this operation, you can call the [GetIndexJobStatus](https://www.alibabacloud.com/help/en/model-studio/developer-reference/api-bailian-2023-12-29-getindexjobstatus) operation to query the status of the job. More than 20 calls to the GetIndexJobStatus operation per minute may trigger throttling.
     * *   Execution takes a period of time after this operation is called. Do not make new request before the request is returned. This interface is not idempotent.
     *
     * @param tmpReq - SubmitIndexAddDocumentsJobRequest
     * @param headers - map
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns SubmitIndexAddDocumentsJobResponse
     */
    submitIndexAddDocumentsJobWithOptions(WorkspaceId: string, tmpReq: SubmitIndexAddDocumentsJobRequest, headers: {
        [key: string]: string;
    }, runtime: $Util.RuntimeOptions): Promise<SubmitIndexAddDocumentsJobResponse>;
    /**
     * Adds parsed documents to an unstructured knowledge base.
     *
     * @remarks
     *   You must first upload documents to [Data Management](https://bailian.console.aliyun.com/#/data-center) and obtain the `FileId`. The documents are the knowledge source of the knowledge base. For more information, see [Import Data](https://www.alibabacloud.com/help/en/model-studio/user-guide/data-import-instructions).
     * *   Before you call this operation, make sure that your knowledge base is created and is not deleted. That is, the primary key ID of the knowledge base `IndexId` is valid.
     * *   After you call this operation, you can call the [GetIndexJobStatus](https://www.alibabacloud.com/help/en/model-studio/developer-reference/api-bailian-2023-12-29-getindexjobstatus) operation to query the status of the job. More than 20 calls to the GetIndexJobStatus operation per minute may trigger throttling.
     * *   Execution takes a period of time after this operation is called. Do not make new request before the request is returned. This interface is not idempotent.
     *
     * @param request - SubmitIndexAddDocumentsJobRequest
     * @returns SubmitIndexAddDocumentsJobResponse
     */
    submitIndexAddDocumentsJob(WorkspaceId: string, request: SubmitIndexAddDocumentsJobRequest): Promise<SubmitIndexAddDocumentsJobResponse>;
    /**
     * Submits a specified CreateIndex job to complete knowledge base creation.
     *
     * @remarks
     * 1.  Before you call this operation, you must call the [CreateIndex](https://www.alibabacloud.com/help/en/model-studio/developer-reference/api-bailian-2023-12-29-createindex) operation and obtain the `IndexId`.
     * 2.  Execution takes a period of time after this operation is called. Do not make new request before the request is returned.
     * 3.  If you want to query the execution status of the job after you call this operation, call the [GetIndexJobStatus](https://www.alibabacloud.com/help/en/model-studio/developer-reference/api-bailian-2023-12-29-getindexjobstatus) operation.
     * 4.  This interface is not idempotent.
     *
     * @param request - SubmitIndexJobRequest
     * @param headers - map
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns SubmitIndexJobResponse
     */
    submitIndexJobWithOptions(WorkspaceId: string, request: SubmitIndexJobRequest, headers: {
        [key: string]: string;
    }, runtime: $Util.RuntimeOptions): Promise<SubmitIndexJobResponse>;
    /**
     * Submits a specified CreateIndex job to complete knowledge base creation.
     *
     * @remarks
     * 1.  Before you call this operation, you must call the [CreateIndex](https://www.alibabacloud.com/help/en/model-studio/developer-reference/api-bailian-2023-12-29-createindex) operation and obtain the `IndexId`.
     * 2.  Execution takes a period of time after this operation is called. Do not make new request before the request is returned.
     * 3.  If you want to query the execution status of the job after you call this operation, call the [GetIndexJobStatus](https://www.alibabacloud.com/help/en/model-studio/developer-reference/api-bailian-2023-12-29-getindexjobstatus) operation.
     * 4.  This interface is not idempotent.
     *
     * @param request - SubmitIndexJobRequest
     * @returns SubmitIndexJobResponse
     */
    submitIndexJob(WorkspaceId: string, request: SubmitIndexJobRequest): Promise<SubmitIndexJobResponse>;
    /**
     * 更新并发布智能体应用
     *
     * @param tmpReq - UpdateAndPublishAgentRequest
     * @param headers - map
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdateAndPublishAgentResponse
     */
    updateAndPublishAgentWithOptions(workspaceId: string, appCode: string, tmpReq: UpdateAndPublishAgentRequest, headers: {
        [key: string]: string;
    }, runtime: $Util.RuntimeOptions): Promise<UpdateAndPublishAgentResponse>;
    /**
     * 更新并发布智能体应用
     *
     * @param request - UpdateAndPublishAgentRequest
     * @returns UpdateAndPublishAgentResponse
     */
    updateAndPublishAgent(workspaceId: string, appCode: string, request: UpdateAndPublishAgentRequest): Promise<UpdateAndPublishAgentResponse>;
    /**
     * 更新文档Tag
     *
     * @param tmpReq - UpdateFileTagRequest
     * @param headers - map
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdateFileTagResponse
     */
    updateFileTagWithOptions(WorkspaceId: string, FileId: string, tmpReq: UpdateFileTagRequest, headers: {
        [key: string]: string;
    }, runtime: $Util.RuntimeOptions): Promise<UpdateFileTagResponse>;
    /**
     * 更新文档Tag
     *
     * @param request - UpdateFileTagRequest
     * @returns UpdateFileTagResponse
     */
    updateFileTag(WorkspaceId: string, FileId: string, request: UpdateFileTagRequest): Promise<UpdateFileTagResponse>;
    /**
     * 更新memory
     *
     * @param request - UpdateMemoryRequest
     * @param headers - map
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdateMemoryResponse
     */
    updateMemoryWithOptions(workspaceId: string, memoryId: string, request: UpdateMemoryRequest, headers: {
        [key: string]: string;
    }, runtime: $Util.RuntimeOptions): Promise<UpdateMemoryResponse>;
    /**
     * 更新memory
     *
     * @param request - UpdateMemoryRequest
     * @returns UpdateMemoryResponse
     */
    updateMemory(workspaceId: string, memoryId: string, request: UpdateMemoryRequest): Promise<UpdateMemoryResponse>;
    /**
     * 更新记忆Node
     *
     * @param request - UpdateMemoryNodeRequest
     * @param headers - map
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdateMemoryNodeResponse
     */
    updateMemoryNodeWithOptions(workspaceId: string, memoryId: string, memoryNodeId: string, request: UpdateMemoryNodeRequest, headers: {
        [key: string]: string;
    }, runtime: $Util.RuntimeOptions): Promise<UpdateMemoryNodeResponse>;
    /**
     * 更新记忆Node
     *
     * @param request - UpdateMemoryNodeRequest
     * @returns UpdateMemoryNodeResponse
     */
    updateMemoryNode(workspaceId: string, memoryId: string, memoryNodeId: string, request: UpdateMemoryNodeRequest): Promise<UpdateMemoryNodeResponse>;
    /**
     * 基于模板Id增量更新Prompt模板。
     *
     * @param request - UpdatePromptTemplateRequest
     * @param headers - map
     * @param runtime - runtime options for this request RuntimeOptions
     * @returns UpdatePromptTemplateResponse
     */
    updatePromptTemplateWithOptions(workspaceId: string, promptTemplateId: string, request: UpdatePromptTemplateRequest, headers: {
        [key: string]: string;
    }, runtime: $Util.RuntimeOptions): Promise<UpdatePromptTemplateResponse>;
    /**
     * 基于模板Id增量更新Prompt模板。
     *
     * @param request - UpdatePromptTemplateRequest
     * @returns UpdatePromptTemplateResponse
     */
    updatePromptTemplate(workspaceId: string, promptTemplateId: string, request: UpdatePromptTemplateRequest): Promise<UpdatePromptTemplateResponse>;
}
